<?xml version="1.0" encoding="UTF-8"?><MetamergeConfig Cycle="2" UUID="9e9a04fa-ce49-4f8a-993b-57e7cf49162e" created="Mon Dec 09 14:15:56 CET 2024" createdBy="eddiehartman" main="itim_swagger.json" modified="Mon Dec 09 14:16:16 CET 2024" modifiedBy="eddiehartman" project="_Restify" version="7.1.1">
    <Script name="itim_swagger.json">
        <ModTime>1733750174652</ModTime>
        <parameter name="includeFiles"/>
        <parameter name="script"><![CDATA[{
    "openapi": "3.0.3",
    "info": {
        "title": "Merged documentation",
        "version": "1.0"
    },
    "servers": [{
        "url": "https://192.168.2.39:30943"
    }],
    "tags": [{
        "name": "Access Administration Batch Submit"
    }, {
        "name": "Access Management"
    }, {
        "name": "Activity Management"
    }, {
        "name": "Delegation Management"
    }, {
        "name": "Entitlement Assignments"
    }, {
        "name": "Entitlement Management"
    }, {
        "name": "Identity Policy Management"
    }, {
        "name": "LifecycleRule Management"
    }, {
        "name": "Organizational Management API"
    }, {
        "name": "Password Management"
    }, {
        "name": "Password Policy Management"
    }, {
        "name": "Person Management"
    }, {
        "name": "Search"
    }, {
        "name": "Service Management"
    }, {
        "name": "System User Management"
    }, {
        "name": "ARC Statistics APIs"
    }, {
        "name": "ARC User APIs"
    }, {
        "name": "Activity Folder APIs"
    }, {
        "name": "Business Activity APIs"
    }, {
        "name": "Business Activity Bulk APIs"
    }, {
        "name": "Business Activity Group Bulk APIs"
    }, {
        "name": "Mitigation APIs"
    }, {
        "name": "Mitigation Bulk APIs"
    }, {
        "name": "Permission Group Bulk APIs"
    }, {
        "name": "Risk APIs"
    }, {
        "name": "Risk Bulk APIs"
    }],
    "paths": {
        "/lifecyclerule/{lifecycleRuleIdentifier}": {
            "get": {
                "tags": ["LifecycleRule Management"],
                "summary": "LifecycleRule Lookup",
                "description": "Returns information about the specified Lifecycle Rule.",
                "parameters": [{
                    "name": "lifecycleRuleIdentifier",
                    "in": "path",
                    "description": "Unique Identifier for a lifecycleRule.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for the LifecycleRule. The specified attributes are returned in the \"_attributes\" section of the response. Specifying a value of \"*\" returns all attributes. By default, all the attributes are returned. Example - ?attributes=filter,decription",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/lifecyclerule/OTA4ODM0OTc2NDIwODE5ODI4MHxudWxsfG51bGw",
                                            "title": "Deletion Lifecycle Rule"
                                        }
                                    },
                                    "_attributes": {
                                        "name": "Deletion Lifecycle Rule",
                                        "operation": "delete"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["LifecycleRule Management"],
                "summary": "LifecycleRule Modify",
                "description": "Modifies information for specified lifecycle Rule. This API modifies attributes of lifecycle rule as well as update schedules. If you add new schedule and do not wish to remove previously set schedules , then provide new schedule along with previous schedules in request body. \r\n\r\n_attributes : JSON representation of the lifecycle attributes to be modified. Following attributes can be specified. \r\n\r\nname : Can be specified to modify the name of the lifecycle rule. \r\n\r\ndescription : Can be specified to modify the description of the lifecycle Rule. \r\n\r\nOperationName : Can be specified to modify the operation to be invoked by the lifecycle Rule. \r\n\r\nFilter : Can be specified to modify the lifecycle rule filter. \r\n\r\nschedules : JSON representation of array of lifecycle schedules to be set. It is an optional attribute. In each schedule you can specify hour, minute, month, day of the week, days of the week, day of the month, quarterly, and semi-annually. Each attribute of the schedule JSON is explained below. \r\n\r\nhour: hour of the schedule. Allowed values are 0-23. To specify hourly schedule set hour = -1. \r\n\r\nminute : minute of the schedule. Allowed values are 0-59. \r\n\r\ndayOfMonth : day of month of the schedule (-1 if every day). This attribute is exclusive with dayOfWeek. To set the dayOfMonth value other than -1(daily), the month value must be set either to specific month or -1(monthly). Allowed values are 1-28, if the schedule is set to monthly, otherwise the allowed value varies according to the month value. \r\n\r\nmonth : month of the schedule (-1 if every month). Allowed values are 1-12 (1 = January, 2 = February, ...). \r\n\r\ndayOfWeek : day of week of the schedule (-1 if every day). This attribute is deprecated for weekly schedule. This attribute is exclusive with dayOfMonth. Allowed values are 1-7 (1 = Sunday, 2 = Monday,...) \r\n\r\ndaysOfWeek : days of week of the weekly schedule. Allowed values are 1-7 (1 = Sunday, 2 = Monday,...) and multiple values are specified in pipe-separated format (1|2 = Sunday and Monday). Value should be the valid String or the null. \r\n\r\ndayOfQuarter : (0 to disable quarterly schedule, otherwise 1-90). dayOfQuarter is exclusive with dayOfMonth, dayOfWeek and dayOfSemiAnnual. Therefore if dayOfQuarter is set then value of dayOfMonth and dayOfWeek is ignored. \r\n\r\ndayOfSemiAnnual : (0 to disable semi-annual schedule, otherwise 1-180). dayOfSemiAnnual is exclusive with dayOfMonth, dayOfWeek and dayOfQuarter. \r\n",
                "parameters": [{
                    "name": "lifecycleRuleIdentifier",
                    "in": "path",
                    "description": "Unique identifier for a LifecycleRule.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyLifecycleRuleRequestBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "severity": "E",
                                    "text": "CTGIMZ052E HTTP POST request data has an invalid data structure for field \" Schedule\".",
                                    "id": "CTGIMZ052",
                                    "inserts": [" Schedule"],
                                    "key": "com.ibm.isim.rest.data.INVALID_DATA_FOR"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["LifecycleRule Management"],
                "summary": "LifecycleRule Remove",
                "description": "Remove the specified LifecycleRule.",
                "parameters": [{
                    "name": "lifecycleRuleIdentifier",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful"
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "severity": "E",
                                    "text": "CTGIMZ052E HTTP POST request data has an invalid data structure for field \"invalid Identifier\".",
                                    "id": "CTGIMZ052",
                                    "inserts": ["invalid Identifier"],
                                    "key": "com.ibm.isim.rest.data.INVALID_DATA_FOR"
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/organizationcontainers/{category}/{orgContainerId}": {
            "get": {
                "tags": ["Search"],
                "summary": "Organization Container Lookup",
                "description": "Returns information about the specified organizational container.",
                "parameters": [{
                    "name": "category",
                    "in": "path",
                    "description": "Specifies the type of organizational container to look up. Valid values are - \"admindomains\", \"bporganizations\", \"organizationunits\", \"locations\", and \"organizations\". The values are case=insensitive.",
                    "required": true,
                    "schema": {
                        "enum": ["admindomains", "bporganizations", "organizationunits", "locations", "organizations"],
                        "type": "string"
                    }
                }, {
                    "name": "orgContainerId",
                    "in": "path",
                    "description": "Unique Identifier for an organizational container.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies comma-separated attributes to return for the organizational container. The specified attributes are returned in the \"_attributes\" section of the response. Specifying a value of \"*\" returns all of the attributes. By default all the attributes are returned. Example - ?attributes=l",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for a reference attribute of an organizational container (eg. ersupervisor). The specified attributes are returned in the \"_embedded\" section of the response. Specifying a value of '*' after reference attribute returns all the properties of the reference attribute. Example - ?embedded=ersupervisor.cn.",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD02OTczMDEyMjg3MDkyNTUzMTIwLG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                            "title": "Raleigh"
                                        }
                                    },
                                    "_embedded": {
                                        "ersupervisor": {
                                            "_links": {
                                                "formTemplate": {
                                                    "href": "/itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2lLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ&filterId=formSearch"
                                                },
                                                "self": {
                                                    "href": "/itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                                    "title": "Alan Smith"
                                                }
                                            },
                                            "_attributes": {
                                                "cn": "Alan Smith"
                                            }
                                        }
                                    },
                                    "_attributes": {
                                        "l": "Raleigh"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/workitems": {
            "put": {
                "tags": ["Activity Management"],
                "summary": "Batch work items modify",
                "description": "Modifies a batch of work items by either approving or rejecting the activity request.",
                "parameters": [{
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "methodOverride",
                    "in": "header",
                    "description": "Specifies the HTTP method override. The value of this parameter is - \"submit-in-batch\". ",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkItemBatchUpdateBeanSwagger"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {}
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/entitlements/assignments/search": {
            "post": {
                "tags": ["Entitlement Assignments"],
                "summary": "Enttilement Assignments Search",
                "description": "Returns all role assignment attributes that match the specified search criteria.",
                "parameters": [{
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that the search returns.",
                    "required": false,
                    "schema": {
                        "type": "integer"
                    },
                    "example": 1000
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Specifies the page to retrieve. Specify 1 for the first page.",
                    "required": false,
                    "schema": {
                        "type": "integer"
                    },
                    "example": 1
                }, {
                    "name": "user",
                    "in": "query",
                    "description": "Specifies the user for the search. It is the encoded value that is returned by the people search API",
                    "required": false,
                    "schema": {
                        "type": "string"
                    },
                    "example": "ZXJnbG9iYWxpZD0zMjg2NjA4OTcyMzIxNjYyNDQ4LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWNvbQ=="
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' \"\r\n\t\t\t\t\t+ \"option performs the search without referencing any cache. The 'delete-cache' option deletes the cache. \"\r\n\t\t\t\t\t+ \"In this case, empty search results are returned",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchAssignmentRequestBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/json": {
                                "example": {
                                    "count": 1,
                                    "limit": 1000,
                                    "resources": [{
                                        "code": {
                                            "href": "/itim/rest/v1.2/entitlements/assignments/MzQwMTgzNjg0OTQ3Mjg3NDE3MA"
                                        },
                                        "assignmentAttributes": [{
                                            "values": ["12/16/2022"],
                                            "name": "enddate"
                                        }, {
                                            "values": ["in-person"],
                                            "name": "method"
                                        }, {
                                            "values": ["08/15/2022"],
                                            "name": "startdate"
                                        }, {
                                            "values": ["chris.miller"],
                                            "name": "instructors"
                                        }],
                                        "entitlement": {
                                            "href": "/itim/rest/roles/ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn",
                                            "title": "Java Programming"
                                        },
                                        "user": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD0zMjg2NjA4OTcyMzIxNjYyNDQ4LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn",
                                            "title": "John Doe"
                                        },
                                        "properties": {
                                            "rightsRef": "ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn"
                                        },
                                        "entitlementName": "Java Programming"
                                    }],
                                    "page": 1
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/workitems/userrecert/{workitemId}": {
            "put": {
                "tags": ["Activity Management"],
                "summary": "Work Item Modify for User Re-certification",
                "description": "Modifies a work item by executing an action provided for the activity.",
                "parameters": [{
                    "name": "workitemId",
                    "in": "path",
                    "description": "Unique identifier for a work item.",
                    "required": true,
                    "schema": {
                        "format": "int64",
                        "type": "integer"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecertifyWorkItemSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK. The request was successful"
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/activities/quicksearches": {
            "get": {
                "tags": ["Activity Management"],
                "summary": "Activities Quick Search",
                "description": "Returns information about quick searches for activities that are sorted by due date.",
                "parameters": [{
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that the search returns. Example. ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/activities/quicksearches"
                                        }
                                    },
                                    "_attributes": {
                                        "requesters": [{
                                            "_links": {
                                                "self": {
                                                    "href": "/itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNzQ2NDgxODM3NDk3LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                                    "title": "James Pearch"
                                                }
                                            },
                                            "_attributes": {
                                                "filter": "requester;x-link=/itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzQ2NDgxODM3NDk3LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsbb3JnLGRjPWNvbQ"
                                            }
                                        }],
                                        "requestees": [{
                                            "_links": {
                                                "self": {
                                                    "href": "/itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                                    "title": "Alan Smith"
                                                }
                                            },
                                            "_attributes": {
                                                "filter": "requestee;x-link=/itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG913U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ"
                                            }
                                        }],
                                        "subjects": [{
                                            "_links": {
                                                "self": {
                                                    "href": "/itim/rest/access/2460300160735116790",
                                                    "title": "GSA"
                                                }
                                            },
                                            "_attributes": {
                                                "filter": "access;x-link=/itim/rest/access/2460300160735116790"
                                            }
                                        }, {
                                            "_links": {
                                                "self": {
                                                    "href": "/itim/rest/access/2460300385874741343",
                                                    "title": "East Region Fileshare"
                                                }
                                            },
                                            "_attributes": {
                                                "filter": "access;x-link=/itim/rest/access/2460300385874741343"
                                            }
                                        }, {
                                            "_links": {
                                                "self": {
                                                    "href": "/itim/rest/access/2460300685064242489",
                                                    "title": "Intranet"
                                                }
                                            },
                                            "_attributes": {
                                                "filter": "access;x-link=/itim/rest/access/2460300685064242489"
                                            }
                                        }, {
                                            "_links": {
                                                "self": {
                                                    "href": "/itim/rest/access/2460300534814505620",
                                                    "title": "Payroll"
                                                }
                                            },
                                            "_attributes": {
                                                "filter": "access;x-link=/itim/rest/access/2460300534814505620"
                                            }
                                        }]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/people/{personId}": {
            "get": {
                "tags": ["Person Management"],
                "summary": "Person Lookup",
                "description": "Returns information about the specified user.",
                "parameters": [{
                    "name": "personId",
                    "in": "path",
                    "description": "Unique Identifier for a user.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for the user. The specified attributes are returned in the \"_attributes\" section of the response. Specifying a value of \"*\" returns all attributes. By default, all the attributes are returned. Example - ?attributes=mail,telephoneNumber",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for reference attributes of a user (eg. manager). The specified attributes are returned in the \"_embedded\" section of the response. Specifying a value of '*' after reference attribute returns all the properties of the reference attribute. Example - ?embedded=manager.name,manager.telephoneNumber",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "forms",
                    "in": "query",
                    "description": "Specifies the boolean. If true, then the form is returned for the user.",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "formTemplate": {
                                            "href": "/itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch"
                                        },
                                        "manager": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t"
                                        },
                                        "self": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                            "title": "Alan Smith"
                                        },
                                        "erparent": {
                                            "href": "/itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t"
                                        }
                                    },
                                    "_attributes": {
                                        "uid": "asmith",
                                        "ercustomdisplay": "Smith",
                                        "ersupervisor": "erglobalid=328759766326767909,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com",
                                        "mail": "asmith@ibm.com",
                                        "manager": "erglobalid=328759766326767909,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com",
                                        "givenname": "Alan",
                                        "erpersonstatus": "ACTIVE",
                                        "name": "Alan Smith",
                                        "sn": "Smith",
                                        "cn": "Alan Smith",
                                        "personType": "Person",
                                        "erparent": "erglobalid=00000000000000000000,ou=org,dc=com"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Person Management"],
                "summary": "Person Modify",
                "description": "Modifies information for the specified user.",
                "parameters": [{
                    "name": "personId",
                    "in": "path",
                    "description": "Unique identifier for a user.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "X-HTTP-Method-Override",
                    "in": "header",
                    "description": "Use 'suspend' to suspend a person. Example - X-HTTP-Method-Override=suspend \n\r\nUse 'restore' to restore a suspended person. Example - X-HTTP-Method-Override=restore \n\r\nThe default if this header is not specified is to send a PUT request",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [{
                                    "$ref": "#/components/schemas/PersonSuspendRestoreBeanSwagger"
                                }, {
                                    "$ref": "#/components/schemas/PersonModifyBeanSwagger"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The requested was accepted.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "requestId": "2565810057541954463",
                                    "changeComplete": false,
                                    "status": 0
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Person Management"],
                "summary": "Person Delete",
                "description": "Deletes the specified user.",
                "parameters": [{
                    "name": "personId",
                    "in": "path",
                    "description": "Unique identifier for a user.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "202": {
                        "description": "The requested was accepted.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonDeleteResponseBean"
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/apisecurity/v1.0/runtime/entitlements": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/passwordpolicy": {
            "get": {
                "tags": ["Password Policy Management"],
                "summary": "Search Password Policy",
                "description": "Returns information about password policies matching the specified search criteria (if any). \r\n\r\nNotes: \r\n\r\nThe \"erpolicyitemname\" of the password policy is returned in the _links.self.title property. \r\n\r\nBy default, no attributes are returned. The client must specify the \"attributes\" query parameter to request the attributes to be returned in the \"_attributes\" property of each service.\r\n",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for each password policy. The specified attributes are returned in the \"_attributes\" property of each password policy. Specifying a value of \"*\" returns all attributes. Example - ?attributes=rules,erpolicytarget,erenabled",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that the search returns. Example - ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and order (\"+\" for ascending, \"-\" for descending) for sorting the returned service. Note: The client is responsible for performing URL encoding if necessary. Example - ?sort=%2Bdescription (%2B is UTF-8 encoding for + sign)",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' option specifies performs the search without refererencing any cache. The 'delete-cache' option deletes the cache. In this case, empty search results are returned. Example - Cache-Control = no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99 ",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/passwordpolicy/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDEwMSxvdT1wb2xpY2llcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20",
                                            "title": "Default password policy for ITIM service"
                                        }
                                    },
                                    "_attributes": {
                                        "erenabled": "true",
                                        "erscope": "2",
                                        "description": "Disallow empty password for ITIM service"
                                    }
                                }, {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/passwordpolicy/ZXJnbG9iYWxpZD01MTMxOTMxNDM2MDk5NjA2OTEzLG91PXBvbGljaWVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                            "title": "REST password-Policy"
                                        }
                                    },
                                    "_attributes": {
                                        "erenabled": "true",
                                        "erscope": "2",
                                        "description": "abc-desc"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Password Policy Management"],
                "summary": "Password Policy Create",
                "description": "Creates a new Password Policy with the given attributes. \r\n\r\norgID : The ID of the Organization container in which this Password Policy is to be created. This parameter is required. \r\n\r\nrules : JSON representation of the Password Policy rules to be set. Below are the attributes than can be used. \r\n\r\nminLength(Minimum length) : Minimum length of the password to be generated. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\nmaxLength(Maximum length) : Maximum length of the password to be generated. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\nmaxSequentialCharacters(Maximum repeated characters) : Maximum allowed number of sequential characters within the password. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\nrepeatedHistoryLength(Repeated history length) : Length of the password history used to check for repeating passwords. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\nreversedHistoryLength(Reversed history length) : length of the password history used to check for repeating passwords spelled backwards. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\nallowUserID(Allow user ID) : Allow or disallow userID in password. It is case sensitive. Allowed values are true and false. By default, true is set. \r\n\r\nallowUserIDCaseInsensitive(Allow user ID with case insensitivity) : Allow or disallow userID in password regardless of upper and lower cases. Allowed values are true and false. By default, true is set. \r\n\r\nallowUserName(Allow user name) : Allow or disallow user name in password. It is case sensitive. Allowed values are true and false. By default, true is set. \r\n\r\nallowUserNameCaseInsensitive(Allow user name with case insensitivity) : Allow or disallow user name in password regardless of upper and lower cases. Allowed values are true and false. By default, true is set. \r\n\r\nallowInDictionary(Allow in dictionary) : Allow or disallow the use of passwords defined in password dictionary. Allowed values are true and false. By default, true is set. \r\n\r\ninvalidChars(Characters not allowed) : Characters which are not to be used within the password. \r\n\r\nrequiredChars(Required characters) : Characters one of which which must used within the password. \r\n\r\nrestrictedToChars(Restricted to characters) : Characters from which the password must be created. \r\n\r\nstartsWithChars(Starts with characters) : Characters one of which must be the first character set of the generated password. \r\n\r\nminDistinctCharacters(Minimum unique characters) : Minimum required number of distinct characters within the password. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\nminAlphabeticCharacters(Minimum alphabetic characters) : Minimum required number of alphabetic characters within the password. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\nminDigitCharacters(Minimum numeric characters) : Minimum required number of numeric characters within the password. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\npasswordComplexity(Password complexity rule) : Enabled password complexity rule. Allowed value are true and false. By default, false is set. \r\n\r\ncustomRules : JSON representation of custom password rules to be enforced for the policy. The key contains the full qualified name of the rule class as specified in passwordrules.properties. For example, if passwordrule.properties contains a rule name password.rule.examples.passwordrules.RegularExpressionRule, then the key here will be examples.passwordrules.RegularExpressionRule. The value parameter can contain boolean value or any other value as per the property value of the rule in passwordrules.properties. For example, if the value is set to false in the passwordrules.properties, then the user can specify true or false. \"customRules\": { \"examples.passwordrules.RegularExpressionRule\": \"true\" } \r\n\r\npolicyTargets : JSON representation of array of policy targets to be set for the password policy. Allowed values for constant are ALL_SERVICE(the policy will be applicable for all services in the system. In this case if any value is specified, it is ignored), SPECIFIC_SERVICE(the policy will be applicable for a specific service which is specified by the service URI) and SERVICE_TYPE(the policy will be applicable for a specific service type which is specified by the service profile name e.g WinLocalProfile). Please note, for SERVICE_TYPE, only service profiles other than ITIM service, hosted service and HR feed are allowed. Services specified by SPECIFIC_SERVICE must belong to the same org container for which the policy is being created. \r\n\r\n_attributes : JSON representation of the Password Policy attributes to be set. Below are the attributes than can be used. \r\n\r\nerpolicyitemname : Name of the password policy. It is a mandatory parameter. \r\n\r\nerscope : Scope of the password policy. Allowed value are 2(this business unit and sub units) and 1(this business unit only). It is a mandatory parameter. \r\n\r\nerenabled : Specifies whether the password policy will be enabled or disabled as soon as the policy is created. Allowed values are true and false. It is a mandatory parameter. \r\n\r\ndescription : Description of the password policy. It is an optional parameter. \r\n\r\nerlabel : Specifies a caption for the password policy. It is an optional parameter. \r\n\r\nerkeywords : Specifies keywords for the password policy. It is an optional parameter. \r\n",
                "parameters": [{
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePasswordPolicyRequestBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/passwordpolicy/ZXJnbG9iYWxpZD02MzI4NTE2NjQyMTU3MTQzOTIwLG91PXBvbGljaWVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                            "title": "REST password-Policy new"
                                        },
                                        "erparent": {
                                            "href": "/itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                            "title": "Organization"
                                        }
                                    },
                                    "_attributes": {
                                        "erenabled": "true",
                                        "erglobalid": "6328516642157143920",
                                        "erscope": "1",
                                        "erkeywords": "Policy new",
                                        "description": "test new",
                                        "rules": {
                                            "allowUserIDCaseInsensitive": true,
                                            "minDistinctCharacters": -1,
                                            "reversedHistoryLength": -1,
                                            "minLength": 5,
                                            "repeatedHistoryLength": -1,
                                            "allowInDictionary": true,
                                            "maxValidityPeriod": -1,
                                            "passwordComplexity": false,
                                            "allowUserName": true,
                                            "customRules": {
                                                "examples.passwordrules.RegularExpressionRule": "true"
                                            },
                                            "maxSequentialCharacters": -1,
                                            "allowUserNameCaseInsensitive": true,
                                            "minAlphabeticCharacters": 3,
                                            "allowUserID": true,
                                            "invalidChars": "",
                                            "requiredChars": "",
                                            "restrictedToChars": "",
                                            "minValidityPeriod": -1,
                                            "minDigitCharacters": -1,
                                            "maxLength": 13,
                                            "startsWithChars": ""
                                        },
                                        "erpolicytarget": ["SPECIFIC_TYPE; WinLocalProfile", "SPECIFIC_SERVICE; ZXJnbG9iYWxpZD05MzM3OTgyNzQyNzQxMDUwMzQsb3U9c2VydmljZXMsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t"],
                                        "objectclass": ["top", "erPasswordPolicy", "erManagedItem", "erPolicyBase", "erPolicyItemBase"],
                                        "erpolicyitemname": "REST password-Policy new",
                                        "erparent": "erglobalid=00000000000000000000,ou=org,dc=com"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/requests/cancel/{requestId}": {
            "post": {
                "tags": ["Search"],
                "summary": "Request to Cancel",
                "description": "Request to cancel that is in pending status.",
                "parameters": [{
                    "name": "requestId",
                    "in": "path",
                    "description": "Unique Identifier for a request.",
                    "required": true,
                    "schema": {
                        "format": "int64",
                        "type": "integer"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful."
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/tasks/me/{category}": {
            "get": {
                "tags": ["Search"],
                "summary": "Task Search",
                "description": "Returns a list of tasks that can be performed by the currently logged in user.",
                "parameters": [{
                    "name": "category",
                    "in": "path",
                    "description": "Identifies the application that is currently being accessed by user. Valid values are console, selfservice, and servicecenter.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_id": "SVCENTER_CHANGE_PASSWORD",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_CHANGE_PASSWORD_FOR_MYSELF",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_DELEGATION_SCHEDULE",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_MANAGE_MY_ACCESS",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_MANAGE_MY_ACTIVITY",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_MANAGE_MY_PROFILE",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_MANAGE_OTHERS_ACCESS",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_MANAGE_OTHERS_PROFILE",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_MODIFY_ACCESS",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_MODIFY_ACCESS_FOR_MYSELF",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_MODIFY_PROFILE",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_MODIFY_PROFILE_FOR_MYSELF",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_REQUEST_ACCESS",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_REQUEST_ACCESS_FOR_MYSELF",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_VIEW_ACCESS",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_VIEW_ACCESS_FOR_MYSELF",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_VIEW_PROFILE",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_VIEW_PROFILE_FOR_MYSELF",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_VIEW_REQUEST_STATUS",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }, {
                                    "_id": "SVCENTER_VIEW_TODO_LIST",
                                    "_attributes": {
                                        "isCustom": false,
                                        "category": "servicecenter"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/passwordpolicy/{passwordPolicyId}": {
            "get": {
                "tags": ["Password Policy Management"],
                "summary": "Password Policy Lookup",
                "description": "Returns information about the specified password policy.",
                "parameters": [{
                    "name": "passwordPolicyId",
                    "in": "path",
                    "description": "Unique Identifier for the password policy.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for the password policy. The specified attributes are returned in the \"_attributes\" section of the response. Specifying a value of \"*\" will return all of the attributes. By default all the attributes are returned. Example - ?attributes=erpolicytarget,description,rules",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/passwordpolicy/ZXJnbG9iYWxpZD00MDQ2MDQwOTE4NDI0MDQ3MTAxLG91PXBvbGljaWVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                            "title": "REST password-Policy new"
                                        }
                                    },
                                    "_attributes": {
                                        "description": "Trial password policy",
                                        "rules": {
                                            "allowUserIDCaseInsensitive": true,
                                            "minDistinctCharacters": -1,
                                            "reversedHistoryLength": -1,
                                            "minLength": 5,
                                            "repeatedHistoryLength": -1,
                                            "allowInDictionary": true,
                                            "maxValidityPeriod": -1,
                                            "passwordComplexity": false,
                                            "allowUserName": false,
                                            "customRules": {
                                                "examples.passwordrules.RegularExpressionRule": "qqq"
                                            },
                                            "maxSequentialCharacters": -1,
                                            "allowUserNameCaseInsensitive": true,
                                            "minAlphabeticCharacters": 3,
                                            "allowUserID": true,
                                            "invalidChars": "",
                                            "requiredChars": "",
                                            "restrictedToChars": "",
                                            "minValidityPeriod": -1,
                                            "minDigitCharacters": -1,
                                            "maxLength": 13,
                                            "startsWithChars": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Password Policy Management"],
                "summary": "Password Policy Modify",
                "description": "Modifies a Password Policy with the given attributes. Please note, at least one of rules, policyTargets or _attributes will need to be specified. \r\n\r\nrules : JSON representation of the Password Policy rules to be set. Below are the attributes than can be used. This is an optional parameter. \r\n\r\nNote : In order to disable an existing rule, the rule name will need to be specified with it's default value e.g \"minLength\" : \"-1\" \r\n\r\nminLength(Minimum length) : Minimum length of the password to be generated. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\nmaxLength(Maximum length) : Maximum length of the password to be generated. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\nmaxSequentialCharacters(Maximum Repeated Characters) : Maximum allowed number of sequential characters within the password. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\nrepeatedHistoryLength(Repeated history length) : Length of the password history used to check for repeating passwords. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\nreversedHistoryLength(Reversed history length) : length of the password history used to check for repeating passwords spelled backwards. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\nallowUserID(Allow user ID) : Allow or disallow userID in password. It is case sensitive. Allowed values are true and false. By default, true is set. \r\n\r\nallowUserIDCaseInsensitive(Allow user ID with case insensitivity) : Allow or disallow userID in password regardless of upper and lower cases. Allowed values are true and false. By default, true is set. \r\n\r\nallowUserName(Allow user name) : Allow or disallow user name in password. It is case sensitive. Allowed values are true and false. By default, true is set. \r\n\r\nallowUserNameCaseInsensitive(Allow user name with case insensitivity) : Allow or disallow user name in password regardless of upper and lower cases. Allowed values are true and false. By default, true is set. \r\n\r\nallowInDictionary(Allow in dictionary) : Allow or disallow the use of passwords defined in password dictionary. Allowed values are true and false. By default, true is set. \r\n\r\ninvalidChars(Characters not allowed) : Characters which are not to be used within the password. \r\n\r\nrequiredChars(Required characters) : Characters one of which which must used within the password. \r\n\r\nrestrictedToChars(Restricted to characters) : Characters from which the password must be created. \r\n\r\nstartsWithChars(Starts with characters) : Characters one of which must be the first character set of the generated password. \r\n\r\nminDistinctCharacters(Minimum unique characters) : Minimum required number of distinct characters within the password. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\nminAlphabeticCharacters(Minimum alphabetic characters) : Minimum required number of alphabetic characters within the password. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\nminDigitCharacters(Minimum numeric characters) : Minimum required number of numeric characters within the password. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. \r\n\r\npasswordComplexity(Password complexity rule) : Enabled password complexity rule. Allowed value are true and false. By default, false is set. \r\n\r\ncustomRules : JSON representation of custom password rules to be enforced for the policy. The key contains the full qualified name of the rule class as specified in passwordrules.properties. For example, if passwordrule.properties contains a rule name password.rule.examples.passwordrules.RegularExpressionRule, then the key here will be examples.passwordrules.RegularExpressionRule. The value parameter can contain boolean value or any other value as per the property value of the rule in passwordrules.properties. For example, if the value is set to false in the passwordrules.properties, then the user can specify true or false. \"customRules\": { \"examples.passwordrules.RegularExpressionRule\": \"true\" } \r\n\r\npolicyTargets : JSON representation of array of policy targets to be set for the password policy. This is an optional parameter. Assigning new values will remove all existing policy targets. In order to retain previous targets, those targets need to be specified. Allowed values for constant are ALL_SERVICE(the policy will be applicable for all services in the system. In this case if any value is specified, it is ignored), SPECIFIC_SERVICE(the policy will be applicable for a specific service which is specified by the service URI) and SERVICE_TYPE(the policy will be applicable for a specific service type which is specified by the service profile name e.g WinLocalProfile). Please note, for SERVICE_TYPE, only service profiles other than ITIM service, hosted service and HR feed are allowed. Services specified by SPECIFIC_SERVICE must belong to the same org container for which the policy is being created. \r\n\r\n_attributes : JSON representation of the Password Policy attributes to be set. This is an optional parameter. Below are the attributes than can be used. \r\n\r\nerpolicyitemname : Name of the password policy. If this parameter is specified, then a value must be entered. \r\n\r\nerscope : Scope of the password policy. Allowed value are 2(this business unit and sub units) and 1(this business unit only). If this parameter is specified, then a value must be entered. \r\n\r\nerenabled : Specifies whether the password policy will be enabled or disabled as soon as the policy is created. Allowed values are true and false. If this parameter is specified, then a value must be entered. \r\n\r\ndescription : Description of the password policy. It is an optional parameter. \r\n\r\nerlabel : Specifies a caption for the password policy. It is an optional parameter. \r\n\r\nerkeywords : Specifies keywords for the password policy. It is an optional parameter. \r\n",
                "parameters": [{
                    "name": "passwordPolicyId",
                    "in": "path",
                    "description": "Unique identifier for the password policy to be modified.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyPasswordPolicyRequestBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "OK. The request was successful"
                    }
                }
            },
            "delete": {
                "tags": ["Password Policy Management"],
                "summary": "Password Policy Delete",
                "description": "Removes the specified password policy.",
                "parameters": [{
                    "name": "passwordPolicyId",
                    "in": "path",
                    "description": "Unique identifier for the password policy to be deleted.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful"
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/systemusers/{systemUserId}": {
            "get": {
                "tags": ["System User Management"],
                "summary": "System User lookup",
                "description": "Returns information about the specified Identity Manager system account.",
                "parameters": [{
                    "name": "systemUserId",
                    "in": "path",
                    "description": "A unique identifier for a system user.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return the system user. The specified attributes are returned in the \"_attributes\" section of the response. If the excludeAttributeFromResponse property in the rest.properties is set to some attribute value, that attribute is excluded from the response though it is specified in the attribute list. Specifying a value \"*\" returns all of attributes except those that are specified in the excludeAttributeFromResponse property. By default, all attributes other than those that are specified in the excludeAttributeFromResponse property are returned. Example - ?attributes=eruid,eraccountstatus",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return a reference attribute of the system user. For example, owner. The specified attributes are returned in the \"_embedded\" section of the response. Specifying a value \"*\" after a reference attribute returns all properties of the reference attribute. Example - ?embedded=owner.mail,owner.telephoneNumber",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "owner": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD0yNTM1NzA0Mjg2MzMyMTI1MTk0LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ"
                                        },
                                        "self": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t",
                                            "title": "asmith"
                                        },
                                        "delegates": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations"
                                        },
                                        "constraints": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints",
                                            "title": "Constraints"
                                        },
                                        "tasks": [{
                                            "href": "/itim/rest/tasks/me/servicecenter",
                                            "title": "servicecenter"
                                        }, {
                                            "href": "/itim/rest/tasks/me/selfservice",
                                            "title": "selfservice"
                                        }]
                                    },
                                    "_attributes": {
                                        "owner": "erglobalid=25357042863321251,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com",
                                        "erservice": "erglobalid=000000000000000002,ou=services,erglobalid=00000000000000000000,ou=org,dc=com",
                                        "eraccountcompliance": "1",
                                        "eruid": "asmith",
                                        "eraccountownershiptype": "Individual",
                                        "eraccountstatus": "0"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/access/assignments": {
            "get": {
                "tags": ["Search"],
                "summary": "Access Assignment Search",
                "description": "Returns all Access Assignments for the specified requestee. \nIf Header parameter Access-Categories-List is specified , the complete list of access categories associated with the user assignments are returned.",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for each access item. Specifying * returns all attributes. Example - ?attributes=accessName,accessCategory,isCommon,entityProfile,tags,description,entityType,badges,additionalInformation,roleAssignmentAttributeValues",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that the search returns. Example - ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and its order (\"+\" for ascending, \"-\" for descending) for sorting the \"\r\n\t\t\t\t\t+ \"returned list of accesses. ?sort=%2BaccessName, ?sort=%2BaccessCategory, Example - ?sort=%2Ddescription\"\r\n\t\t\t\t\t+ \"(%2B and %2D is UTF-8 encoding for + and - sign respectively)",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent \"\r\n\t\t\t\t\t+ \"requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' \"\r\n\t\t\t\t\t+ \"option specifies performs the search without referencing any cache. The 'delete-cache' option deletes the \"\r\n\t\t\t\t\t+ \"cache. In this case, empty search results are returned. Example - Cache-Control = no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Permission-List",
                    "in": "header",
                    "description": "Specifies whether the API returns the list of actions that can be performed on the returned assignments. By default, the permissions list is not returned. Example - Permission-List=get-permissions ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_embedded": {
                                        "account": {
                                            "_links": {
                                                "self": {
                                                    "href": "/itim/rest/accounts/ZXJnbG9iYWxpZD00NjkzMTIzMjc1NjA3ODQ3MjU2LG91PTAsb3U9YWNjb3VudHMsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                                    "title": "asmith7"
                                                }
                                            },
                                            "_attributes": {
                                                "eraccountcompliance": "1",
                                                "eruid": "asmith7",
                                                "eraccountstatus": "0"
                                            }
                                        }
                                    },
                                    "_links": {
                                        "access": {
                                            "href": "/itim/rest/access/4693112079467885909"
                                        },
                                        "requestee": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ"
                                        },
                                        "icon": {
                                            "href": "custom/ui/images/access/iconApplicationAccess.gif"
                                        },
                                        "self": {
                                            "href": "/itim/rest/access/assignments/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbTo0NjkzMTEyMDc5NDY3ODg1OTA5OmVyZ2xvYmFsaWQ9NDY5MzEyMzI3NTYwNzg0NzI1NixvdT0wLG91PWFjY291bnRzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                            "title": "ausintranet(asmith7)"
                                        }
                                    },
                                    "_attributes": {
                                        "badges": [],
                                        "accessName": "ausintranet",
                                        "entityType": 2,
                                        "description": "Austin intranet",
                                        "status": "FULFILLED",
                                        "tags": []
                                    }
                                }, {
                                    "_links": {
                                        "access": {
                                            "href": "/itim/rest/access/4693112079467885909"
                                        },
                                        "requestee": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ"
                                        },
                                        "icon": {
                                            "href": "custom/ui/images/access/iconApplicationAccess.gif"
                                        },
                                        "self": {
                                            "href": "/itim/rest/access/assignments/ZXJnbG9iYWxpZD00NjkzMTE5OTIxNTI5MzY2OTY5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbTo0NjkzMTEyMDc5NDY3ODg1OTA5OmVyZ2xvYmFsaWQ9NDY5MzEyMzI3NTYwNzg0NzI1NixvdT0wLG91PWFjY291bnRzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                            "title": "Manager"
                                        }
                                    },
                                    "_attributes": {
                                        "badges": [],
                                        "roleAssignmentAttributes": [{
                                            "_attributes": {
                                                "definedRole": "/itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0",
                                                "assignmentAttributeKey": "StartDate",
                                                "assignmentAttributeLabel": "StartDate",
                                                "assignmentAttributeValue": {
                                                    "values": ["12/21/2020"],
                                                    "name": "startdate"
                                                },
                                                "definedRoleName": "Manager"
                                            }
                                        }, {
                                            "_attributes": {
                                                "definedRole": "/itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0",
                                                "assignmentAttributeKey": "EndDate",
                                                "assignmentAttributeLabel": "EndDate",
                                                "assignmentAttributeValue": {
                                                    "values": ["10/21/2020"],
                                                    "name": "enddate"
                                                },
                                                "definedRoleName": "Manager"
                                            }
                                        }],
                                        "accessName": "Manager",
                                        "entityType": 3,
                                        "description": "Allows end user a manager role.",
                                        "accessCategory": "Application",
                                        "status": "FULFILLED",
                                        "tags": [],
                                        "isEditRoleAssignmnetAttributeAllowedForPerson": true,
                                        "isViewRoleAssignmnetAttributeAllowedForPerson": true
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Access Administration Batch Submit"],
                "summary": "Access Assignment Batch Requests",
                "description": "\r\n[Access Assignment Batch Addition](/itim/swaggerdoc/Access_Assignment_Batch_Addition.html) - Add access assignments in a batch. \n\r\n[Access Assignment Batch Deletion](/itim/swaggerdoc/Access_Assignment_Batch_Deletion.html) - Delete access assignments in a batch. \n\r\n[Access Assignment Batch Modify](/itim/swaggerdoc/Access_Assignment_Batch_Modify.html) - Modify access assignments in a batch. \n\r\n[Access Assignment Batch Validation](/itim/swaggerdoc/Access_Assignment_Batch_Validation.html) - Validate access assignments in a batch. \n\r\n[Access Assignment Batch Check Compliance](/itim/swaggerdoc/Access_Assignment_Batch_Check_Compliance.html) - Check the compliance of access assignments in a batch. \r\n\r\nClick link to see more details for each request\n",
                "parameters": [{
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pasns the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "X-HTTP-Method-Override",
                    "in": "header",
                    "description": "Use 'check-compliance' to check a batch of access assignments for compliance. Example - X-HTTP-Method-Override=check-compliance \n\r\nUse 'validate-full' to validate access assignments in a batch. Example - X-HTTP-Method-Override=validate-full \n\r\nUse 'submit-in-batch' to submit access assignments for addition, deletion and modification in a batch. Example - X-HTTP-Method-Override=submit-in-batch",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessAssignCheckComplianceRequestBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK. The request was successful"
                    },
                    "202": {
                        "description": "OK. The request was successful"
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/systemusers/me": {
            "get": {
                "tags": ["System User Management"],
                "summary": "Current System User Lookup",
                "description": "Returns information about a user who is logged in to the Identity Manager system account.",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return the current Identity Manager account. The specified attributes are returned in the \"_attributes\" section of the response. If the excludeAttributeFromResponse property in the rest.properties is set to some attribute value, that attribute is excluded from the response though it is specified in the attribute list. Specifying a value \"*\" returns all of attributes except those that are specified in the excludeAttributeFromResponse property. By default, all attributes other than those that are specified in excludeAttributeFromResponse property are returned. Example - ?attributes=eruid,eraccountstatus",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return a reference attribute of the system user. For example, owner. The specified attributes are returned in the \"_embedded\" section of the response. Specifying a value \"*\" after a reference attribute returns all properties of the reference attribute. Example - ?embedded=owner.mail,owner.telephoneNumber",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "headers": {
                            "CSRFToken": {
                                "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user.",
                                "style": "simple",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "owner": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNyxvdT0wLG91PXBlb3BsZSxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20"
                                        },
                                        "self": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t",
                                            "title": "ITIM Manager"
                                        },
                                        "delegates": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations"
                                        },
                                        "constraints": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints",
                                            "title": "Constraints"
                                        },
                                        "tasks": [{
                                            "href": "/itim/rest/tasks/me/console",
                                            "title": "console"
                                        }, {
                                            "href": "/itim/rest/tasks/me/servicecenter",
                                            "title": "servicecenter"
                                        }, {
                                            "href": "/itim/rest/tasks/me/selfservice",
                                            "title": "selfservice"
                                        }]
                                    },
                                    "_attributes": {
                                        "owner": "erglobalid=00000000000000000007,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com",
                                        "erservice": "erglobalid=00000000000000000002,ou=services,erglobalid=00000000000000000000,ou=org,dc=com",
                                        "eraccountcompliance": "1",
                                        "erobjecttype": "1",
                                        "eruid": "ITIM Manager",
                                        "erroles": "erglobalid=00000000000000000003,ou=sysRoles,erglobalid=00000000000000000000,ou=org,dc=com",
                                        "eraccountstatus": "0"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/systemroles/{systemRoleId}": {
            "get": {
                "tags": ["Search"],
                "summary": "System Role (ITIM Group) Lookup",
                "description": "Returns information about the specified system role (ITIM Group).",
                "parameters": [{
                    "name": "systemRoleId",
                    "in": "path",
                    "description": "Unique Identifier for system role (ITIM Group).",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies comma- separated attributes to return for the system role. The specified attributes are returned in the \"_attributes\" section of the response. Specifying a value of \"*\" returns all attributes. By default all the attributes are returned. Example - ?attributes=errolename,description",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for the reference attributes of system role (eg. erparent). The specified attributes are returned in the \"_embedded\" section of the response. Specifying a value of '*' after reference attribute returns all the properties of the reference attribute. Example - ?embedded=erparent.*",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDA2MixvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20",
                                            "title": "Auditor"
                                        }
                                    },
                                    "_embedded": {
                                        "erparent": {
                                            "_links": {
                                                "self": {
                                                    "href": "/itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                                    "title": "JKEnterprise"
                                                }
                                            },
                                            "_attributes": {
                                                "erorgstatus": "0",
                                                "description": "J K Enterprise",
                                                "o": "JKEnterprise"
                                            }
                                        }
                                    },
                                    "_attributes": {
                                        "errolename": "Auditor"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/systemusers/{systemUserId}/constraints": {
            "get": {
                "tags": ["System User Management"],
                "summary": "System User Contraints Lookup",
                "description": "Returns the constraints for the specified system user \r\n\nThe \"passwordRules\" property is an array listing of each rule for the password. \r\n\nIf there are no password rules, an empty array is returned.",
                "parameters": [{
                    "name": "systemUserId",
                    "in": "path",
                    "description": "The System User ID for which you want to retrieve constraints.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma-separated constraints toe return for the specified link. The specified constraints are returned in the \"_embedded\" property of the constraint object. Example - ?embedded=passwordConstraints",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "passwordConstraints": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ/constraints/password",
                                            "title": "Password Constraints"
                                        },
                                        "self": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ/constraints",
                                            "title": "Constraints"
                                        },
                                        "systemuser": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ",
                                            "title": "criegle"
                                        }
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/access/{accessId}": {
            "get": {
                "tags": ["Access Management"],
                "summary": "Access Lookup",
                "description": "Returns information about the specified access.",
                "parameters": [{
                    "name": "accessId",
                    "in": "path",
                    "description": "Unique identifier for an access.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for an access item. The specified attributes are returned in the \"_attributes\" section of the response. Specifying a value of \"*\" returns all attributes. Example. ?attributes=accessName,accessCategory,isCommon,entityProfile,tags,description,entityType,badges,additionalInformation",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "assignments": {
                                            "href": "/itim/rest/access/assignments"
                                        },
                                        "icon": {
                                            "href": "custom/ui/images/access/iconAccessRoleAccess.gif"
                                        },
                                        "self": {
                                            "href": "/itim/rest/access/6892757478197795306",
                                            "title": "FTP Server"
                                        },
                                        "owners": {
                                            "href": "/itim/rest/access/6892757478197795306/owners"
                                        }
                                    },
                                    "_attributes": {
                                        "badges": [{
                                            "style": "red",
                                            "designation": "Critical"
                                        }, {
                                            "style": "green",
                                            "designation": "JK Enterprise"
                                        }],
                                        "accessName": "FTP Server",
                                        "entityType": 1,
                                        "entityProfile": "PosixLinuxProfile",
                                        "accessCategory": "Application",
                                        "isCommon": true,
                                        "description": "FTP Server"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Access Management"],
                "summary": "Modify Access",
                "description": "\r\nModifies access information for the entity \r\n\r\n Required attributes\r\nenableAccess - Value should be true if access needs to be enabled otherwise false if access needs to be disabled \r\n\r\nentityType - Value should be 3 as currently this API only supports creating access for the role \r\n\r\nProvide list attributes(if any) that needs to be updated e.g. badges, tags, additionalInformation, accessName, accessCategory, description, isCommon, icon\r\n",
                "parameters": [{
                    "name": "accessId",
                    "in": "path",
                    "description": "Unique identifier for an access.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyAccessBean"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/entitlements/assignments/{assignmentId}": {
            "get": {
                "tags": ["Entitlement Assignments"],
                "summary": "Assignment Lookup",
                "description": "Returns assignment details of a specified assignment ID.",
                "parameters": [{
                    "name": "assignmentId",
                    "in": "path",
                    "description": "Specifies the assignment ID for a lookup. It is the encoded value that is returned by the /assignments/search API",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "MTk5OTczMzYyNDk0Mjk2NDcxNw"
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/json": {
                                "example": {
                                    "code": {
                                        "href": "/itim/rest/v1.2/entitlements/assignments/MzQwMTgzNjg0OTQ3Mjg3NDE3MA"
                                    },
                                    "assignmentAttributes": [{
                                        "values": ["12/16/2022"],
                                        "name": "enddate"
                                    }, {
                                        "values": ["in-person"],
                                        "name": "method"
                                    }, {
                                        "values": ["08/15/2022"],
                                        "name": "startdate"
                                    }, {
                                        "values": ["chris.miller"],
                                        "name": "instructors"
                                    }],
                                    "entitlement": {
                                        "href": "/itim/rest/roles/ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn",
                                        "title": "Java Programming"
                                    },
                                    "user": {
                                        "href": "/itim/rest/people/ZXJnbG9iYWxpZD0zMjg2NjA4OTcyMzIxNjYyNDQ4LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn",
                                        "title": "John Doe"
                                    },
                                    "properties": {
                                        "rightsRef": "ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbSxkYz1pc3Zn"
                                    },
                                    "entitlementName": "Java Programming"
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/people/me": {
            "get": {
                "tags": ["Person Management"],
                "summary": "Current Person Lookup",
                "description": "Returns the information about the currently logged in user.",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for the current user. The specified attributes are returned in the \"_attributes\" section of the response. Specifying a value of \"*\" returns all attributes. Example - ?attributes=mail,telephoneNumber",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for a reference attribute of a user (eg. manager). The specified attributes are returned in the \"_embedded\" section of the response. Specifying a value of '*' after reference attribute returns all properties of the reference attribute. Example - ?embedded=manager.name,manager.telephoneNumber",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "http://localhost:9080/itim/rest/people/ZXJnbG9iYWxpZD01Njg4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JjPWNvbQ",
                                            "title": "Alan Smith"
                                        }
                                    },
                                    "_embedded": {
                                        "manager": {
                                            "_links": {
                                                "self": {
                                                    "href": "http://localhost:9080/itim/rest/people/ZXJnbG9iYWxpZD01Njg4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                                    "title": "Chuck Riegle"
                                                }
                                            },
                                            "_attributes": {
                                                "name": "Chuck Riegle"
                                            }
                                        }
                                    },
                                    "_attributes": {
                                        "uid": "asmith",
                                        "telephonenumber": "919-224-1234",
                                        "givenname": "Alan",
                                        "erpersonstatus": "ACTIVE",
                                        "name": "Alan Smith",
                                        "mobile": "919-123-4567",
                                        "cn": "Alan Smith",
                                        "sn": "Smith"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/roles/orgroles": {
            "get": {
                "tags": ["Search"],
                "summary": "Organizational Role Search",
                "description": "Returns information about the organizational role that matches the specified search criteria. \nBy default, no attributes are returned. The client must specify the \"attributes\" query parameter to request the attributes to be returned in the \"_attributes\" property of each static role. \nA requested attribute is not returned if the client does not have permission to retrieve the attribute or if the value of the attribute is null. \nIf an attribute has multiple values, the value of the corresponding property is an array of the attribute's values. \n",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for each static role. The specified attributes are returned in the \"_attributes\" property of each static role. Specifying a value of \"*\" returns all attributes. Example- ?attributes=errolename",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that the search returns. Example. ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and order (\"+\" for ascending, \"-\" for descending) for sorting the returned static role. Note: The client is responsible for performing URL encoding if necessary. Example- ?sort=%2Berrolename (%2B is UTF-8 encoding for + sign)",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "type",
                    "in": "query",
                    "description": "Specifies the type of role to search for. Example. ?type=static",
                    "schema": {
                        "default": "static",
                        "enum": ["static", "dynamic", "all"]
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies the caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' option performs the search without referencing any cache. The 'delete-cache' option deletes the cache. In this case, empty search results are returned. Example- Cache-Control=no-cache",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example- items=0-99",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/roles/ZXJnbG9iYWxpZD0yNjg3ODk5MTYzNDkxMzAzODMsb3U9cm9sZXMsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                            "title": "terminator Role"
                                        }
                                    },
                                    "_attributes": {
                                        "errolename": "terminator Role"
                                    }
                                }, {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/roles/ZXJnbG9iYWxpZD0yNjg3ODk3ODQzMTUyNTI5NzUsb3U9cm9sZXMsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                            "title": "supervisor Role"
                                        }
                                    },
                                    "_attributes": {
                                        "errolename": "supervisor Role"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/people/{personId}/accounts": {
            "get": {
                "tags": ["Person Management"],
                "summary": "Person Account search",
                "description": "Returns the accounts of a specified user.",
                "parameters": [{
                    "name": "personId",
                    "in": "path",
                    "description": "The person ID to retrieve accounts for.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for the account. The specified attributes are returned in the \"_attributes\" section. Specifying a value of \"*\" returns all attributes. Example - ?attributes=owner,eraccountstatus,eruid,eraccountownershiptype",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for reference attributes of the accounts (eg. erservice). The specified attributes are returned in the \"_embedded\" section of the response. Specifying a value of '*' after reference attribute returns all the properties of the reference attribute. Example - ?embedded=erservice.erservicename.",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that the search returns. Example - ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and order (\"+\" for ascending, \"-\" for descending) by which the returned people are sorted. Note: The client is responsible for performing URL encoding if necessary. Example - ?sort=%2Bcn (%2B is UTF-8 encoding for + sign)",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' option performs the search without referencing any cache. The 'delete-cache' option deletes the cache. In this case, empty search results are returned. Example - Cache-Control = no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99 ",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_embedded": {
                                        "erservice": {
                                            "_links": {
                                                "statusDetails": {
                                                    "href": "/itim/rest/services/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMixvdT1zZXJ2aWNlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20/statusdetails",
                                                    "title": "statusDetails"
                                                },
                                                "self": {
                                                    "href": "/itim/rest/services/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMixvdT1zZXJ2aWNlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20",
                                                    "title": "ITIM Service"
                                                }
                                            },
                                            "_attributes": {
                                                "erservicename": "ITIM Service"
                                            }
                                        }
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/accounts/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t",
                                            "title": "asmith"
                                        }
                                    },
                                    "_attributes": {
                                        "eruid": "asmith"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/password/configuration": {
            "get": {
                "tags": ["Password Management"],
                "summary": "Password Configuration",
                "description": "Return the Password configuration for Identity Manager.",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies if the password synch property is returned. Example - ?attributes=isSynchPassword",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/password/configuration",
                                            "title": "Challenge response configuration resource"
                                        }
                                    },
                                    "_attributes": {
                                        "responseMinLength": -1,
                                        "isSSOEnabled": false,
                                        "challengeNumberRequired": 1,
                                        "challengeResponseEnabled": true,
                                        "responseMatchQuestion": false,
                                        "responseDisallowUserID": false,
                                        "isChallengeUserDefined": true,
                                        "responseUniqueAnswer": false,
                                        "isSynchPassword": true,
                                        "isChallengeResponseEnforced": false,
                                        "responseNumberConfigured": 1,
                                        "applicationURL": "/itim/self/Login/ChallengeResponse.do",
                                        "responseMaxRepeatChar": -1
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/activities/count": {
            "get": {
                "tags": ["Activity Management"],
                "summary": "Pending Count of Activities For Current User",
                "description": "Returns the count of pending requests for a user.",
                "parameters": [{
                    "name": "status",
                    "in": "query",
                    "description": "Specifies the status of activities whose count is to be returned. Currently, only the status PENDING is supported.",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "count": 30
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/access/assignments/{assignmentId}": {
            "delete": {
                "tags": ["Access Management"],
                "summary": "Access Assignment Delete",
                "description": "Deletes the specified access assignment.",
                "parameters": [{
                    "name": "assignmentId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessAssignmentSingleRequestBean"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted. The request was accepted for processing, but the processing is not complete.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "result": {
                                            "href": "/itim/rest/requests/7655357092010861510"
                                        }
                                    },
                                    "requestID": "7655357092010861510",
                                    "results": [{
                                        "_links": {
                                            "requestee": {
                                                "href": "/itim/rest/people/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ"
                                            },
                                            "assingment": {
                                                "href": "/itim/rest/access/assignments/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVv"
                                            }
                                        },
                                        "status": "SUCCESS"
                                    }, {
                                        "_links": {
                                            "requestee": {
                                                "href": "/itim/rest/people/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ"
                                            },
                                            "accesses": []
                                        },
                                        "status": "SUCCESS"
                                    }],
                                    "overallStatus": "SUBMITTED"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "results": [{
                                        "_links": {
                                            "requestee": {
                                                "href": "/itim/rest/people/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ"
                                            },
                                            "assingment": {
                                                "href": "/itim/rest/access/assignments/ZXJnbG9iYWxpZD03MTE1MDUwODk3MzEzOTQ2MDM2LG91PTAs"
                                            }
                                        },
                                        "messages": [{
                                            "text": "com.ibm.itim.accesscatalog.validation.INVALID_REVOKE_ACCOUNT_ID",
                                            "key": "com.ibm.itim.accesscatalog.validation.INVALID_REVOKE_ACCOUNT_ID"
                                        }],
                                        "status": "ERROR"
                                    }],
                                    "overallStatus": "ERROR"
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/password/challengeresponse": {
            "get": {
                "tags": ["Password Management"],
                "summary": "Forgotten Password Questions Lookup For Current User",
                "description": "Returns the list of forgotten password questions configured for the currently logged in user.",
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/password/challengeresponse"
                                        }
                                    },
                                    "challenge": ["What is the name of your first company?", "What is your favorite color?", "How many siblings do you have?"],
                                    "challengeResponses": [{
                                        "response": "SHA-256:Y2hrdGMzOXBiOTN1:PdLrmAtsfC0u0zluEZ0u6lV0Ev0FmnY2cyuGmYKw/aw=",
                                        "challenge": "What is the name of your first company?"
                                    }, {
                                        "response": "SHA-256:bnhqaXIwaDMxNWl6:TjBvQJnvo4BD3JGPTsGRtwvtIIBjsg/Zmthrdxf4mmM=",
                                        "challenge": "What is your favorite color?"
                                    }, {
                                        "response": "SHA-256:a2I0dm9rOTI5MTI1:oCepu5gwY8YzcLhGJLnGck7XGhsNyJ8nIKIg5onXVEI=",
                                        "challenge": "How many siblings do you have?"
                                    }]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Password Management"],
                "summary": "Forgotten Password Challenge Response Question Update",
                "description": "Specifies that the currently logged in user can update the forgotten password questions and answers. Users can modify the response for an existing challenge or create a new challenge response. \r\nNote : The 'password' attribute of the request payload must contain the Identity Manager System account password of the current user.",
                "parameters": [{
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must passthe valid CSRF token in the request header. When a new PUT, POST, orDELETE request is created, the request header must contain CSRF tokenthat is received to the authorized user. Authorized users must get thevalid CSRF token in the response header by running the 'Current System User Lookup' REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordSubmitResponseBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Challenge response questions are submitted successfully.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/password/challengeresponse/criegle"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. This might happen if challenges are empty, a response is not provided for a challenge, the password is invalid, and et cetera.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "severity": "E",
                                    "text": "CTGIMH066E The value entered for Identity Manager Password field is not correct. Enter the correct password.",
                                    "id": "CTGIMH066",
                                    "key": "com.ibm.itim.apps.ejb.organization.account.PasswordManagerBean.INVALID_ITIM_PASSWORD"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Password Management"],
                "summary": "Forgotten Password Challenge Response Question Submit",
                "description": "Specifies that the currently logged in user can create forgotten passwordquestions and answers. The 'password' attribute of the request payload mustcontain the Identity Manager System account password of the current user.",
                "parameters": [{
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must passthe valid CSRF token in the request header. When a new PUT, POST, orDELETE request is created, the request header must contain CSRF tokenthat is received to the authorized user. Authorized users must get thevalid CSRF token in the response header by running the 'Current System User Lookup' REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordSubmitResponseBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Challenge response questions are submitted successfully.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/password/challengeresponse/criegle"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. This might happen if challenges are empty, a response is not provided for a challenge, password is invalid, and et cetera.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "severity": "E",
                                    "text": "CTGIMH066E The value entered for Identity Manager Password field is not correct. Enter the correct password.",
                                    "id": "CTGIMH066",
                                    "key": "com.ibm.itim.apps.ejb.organization.account.PasswordManagerBean.INVALID_ITIM_PASSWORD"
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/people/bpperson": {
            "get": {
                "tags": ["Person Management"],
                "summary": "People Search for Business Partner Person",
                "description": "Returns information for the specified user that belongs to a Business Partner Person category. \r\n\r\nThe \"name\" of the user is returned in the _links.self.title property. \r\n\r\nBy default, no attributes are returned. The client must specify the \"attributes\" query parameter to request the attributes that are returned in the \"_attributes\" property of each user. \r\n\r\nA requested attribute is not returned if the client does not have permission to retrieve the attribute or if the value of the attribute is null. \r\n\r\nIf an attribute has multiple values, the value of the corresponding property is an array of the attribute's values. \r\n",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for each iser. The specified attributes are returned in the \"_attributes\" property of each person. Specifying a value of \"*\" returns all attributes. Example - ?attributes=cn,sn",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma separated attributes to return for a reference attribute of a user (eg. manager). The specified attributes are returned in the \"_embedded\" section of the response. Specifying a value of '*' after reference attribute returns all the properties of the reference attribute. Example - ?embedded=manager.cn",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that should be returned by the search. Example - ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and order (\"+\" for ascending, \"-\" for descending) for sorting the returned result. Note: The client is responsible for performing URL encoding if necessary. Example - ?sort=%2Bcn (%2B is UTF-8 encoding for + sign)",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options . By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The \"no-cache\" option performs the search without referencing any cache. The \"delete-cache\" option deletes the cache. In this case, empty search results are returned. Example - Cache-Control=no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99 ",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "formTemplate": {
                                            "href": "/itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch"
                                        },
                                        "self": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                            "title": "Mark Stevens"
                                        }
                                    },
                                    "_attributes": {
                                        "sn": "Stevens",
                                        "cn": "Mark Stevens"
                                    }
                                }, {
                                    "_links": {
                                        "formTemplate": {
                                            "href": "/itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch"
                                        },
                                        "self": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                            "title": "James Parch"
                                        }
                                    },
                                    "_attributes": {
                                        "sn": "Parch",
                                        "cn": "James Parch"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/entities": {
            "get": {
                "tags": ["Search"],
                "summary": "Widget Filter Search",
                "description": "Returns the search results that are based on the filter configured for a widget . This API is used with the form template REST API. Identity Manager forms consist of some widgets that contain an LDAP search filter that is configured by System Administrator. \r\n\nThis configured search filter is returned by \"form tempalate\" REST API in an encrypted format. The LDAP search API decrypts this filter and returns the search result. \r\n",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the attribute that must be returned as part of search. Only one attribute can be specified. If you specify a comma-separated list of attributes, then no attributes are returned. Example - ?attributes=cn",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that the search returns. Example. ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' option performs the search without referencing any cache. The 'delete-cache' option deletes the cache. In this case, empty search results are returned. Example - Cache-Control=no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to be returned. Note : The range uses a zero-based index. Example - items=0-99 ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "com.ibm.isim.rest.accesstoken",
                    "in": "header",
                    "description": "This mandatory header parameter contains the encrypted filter on which search is executed. This token is generated by the \"form template\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_id": "ZXJnbG9iYWxpZD0yNDk5MjUzNTY5NjU4OTcxMTg1LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                    "_attributes": {
                                        "cn": "Alan Smith"
                                    }
                                }, {
                                    "_id": "ZXJnbG9iYWxpZD0yNDk5MjUzNTc0NjU3MTkyNzM2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                    "_attributes": {
                                        "cn": "Chuck Riegle"
                                    }
                                }, {
                                    "_id": "ZXJnbG9iYWxpZD0yNDk5MjU0NjU2NjczNDE2OTMwLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                    "_attributes": {
                                        "cn": "Dan Gosling"
                                    }
                                }, {
                                    "_id": "ZXJnbG9iYWxpZD0yNDk5MjU0OTg3MjMzOTU0NjEyLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                    "_attributes": {
                                        "cn": "Danny Guthrie"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/identitypolicy": {
            "get": {
                "tags": ["Search"],
                "summary": "Search All Identity Policies",
                "description": "Returns list of all the Identity Policies.",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for each identity policy. By default, no attributes are returned. The client must specify the \"attributes\" query parameter to request the attributes to be returned in the \"_attributes\" property of each identity policy. A requested attribute is returned if the client does not have permission to retrieve the attribute or if the value of the attribute is null. Specifying a value of \"*\" will return all of the attributes. Example. ?attributes=l",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items for the search to return. Example - ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and order (\"+\" for ascending, \"-\" for descending) by which to sort the returned users. Note: The client is responsible for performing URL encoding if necessary. Example - ?sort=%2Berpolicyitemname (%2B is UTF-8 encoding for + sign)",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' option performs the search without referencing any cache. The 'delete-cache' option deletes the cache. In this case, empty search results are returned. Example - Cache-Control = no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/identitypolicy/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNixvdT1wb2xpY2llcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1EaXZ5YQ",
                                            "title": "Default identity policy for ITIM (Person)"
                                        }
                                    },
                                    "_attributes": {
                                        "eruserclass": "Person",
                                        "erenabled": "true",
                                        "erglobalid": "00000000000000000006",
                                        "erkeywords": "Person",
                                        "erscope": "2",
                                        "description": "Default identity policy for all services and for Person class.",
                                        "erlabel": "ITIM's default identity policy (Person)",
                                        "erjavascript": "function createIdentity() { \n var EXISTING_CASE=0; \n var UPPER_CASE=1; \n var LOWER_CASE=2; \n var tf = false; \n var identity = \"\"; \n var baseidentity = \"\"; \n var counter = 0; \n var locale = subject.getProperty(\"erlocale\"); \n var fAttrKey = \"uid\"; \n var sAttrKey = \"\"; \n var idx1 = 0; \n var idx2 = 0; \n var fCase = 2; \n var sCase = 2; \n if ((locale != null) && (locale.length > 0)) { \n locale = locale[0]; \n }\n if (locale == null || locale.length == 0)\n locale = \"\"; \n var firstAttribute = \"\"; \n var secondAttribute = \"\"; \n if (((fAttrKey != null) && (fAttrKey.length > 0)) || ((sAttrkey != null) && (sAttrkey.length > 0))) {\n if ((fAttrKey != null) && (fAttrKey.length > 0)) { \n firstAttribute = subject.getProperty(fAttrKey); \n if (((firstAttribute != null) && (firstAttribute.length > 0))) \n firstAttribute = firstAttribute[0]; \n if (firstAttribute == null || firstAttribute.length == 0) \n firstAttribute = \"\"; \n else { \n firstAttribute=IdentityPolicy.resolveAttribute(fAttrKey,firstAttribute); \n if ((idx1>firstAttribute.length) || (idx1==0)) \n idx1=firstAttribute.length; \n firstAttribute = firstAttribute.substring(0,idx1); \n } \n if (fCase == UPPER_CASE) \n firstAttribute = firstAttribute.toUpperCase(locale); \n else if (fCase == LOWER_CASE) \n firstAttribute = firstAttribute.toLowerCase(locale); \n } \n if ((sAttrKey != null) && (sAttrKey.length > 0)) { \n secondAttribute = subject.getProperty(sAttrKey); \n if (((secondAttribute != null) && (secondAttribute.length > 0))) \n secondAttribute = secondAttribute[0]; \n if (secondAttribute == null || secondAttribute.length == 0) \n secondAttribute = \"\"; \n else { \n secondAttribute=IdentityPolicy.resolveAttribute(sAttrKey,secondAttribute); \n if ((idx2>secondAttribute.length) || (idx2==0)) \n idx2=secondAttribute.length; \n secondAttribute = secondAttribute.substring(0,idx2); \n } \n if (sCase == UPPER_CASE) \n secondAttribute = secondAttribute.toUpperCase(locale); \n else if (sCase == LOWER_CASE) \n secondAttribute = secondAttribute.toLowerCase(locale); \n } \n baseidentity = firstAttribute + secondAttribute; \n } \n if ((baseidentity == null) || (baseidentity.length == 0)) { \n var givenname = subject.getProperty(\"givenname\"); \n if (((givenname != null) && (givenname.length > 0))) \n givenname = givenname[0]; \n if(givenname == null || givenname.length == 0) \n givenname = \"\"; \n else \n givenname = givenname.substring(0,1); \n baseidentity = givenname + subject.getProperty(\"sn\")[0]; \n } \n if (baseidentity == null) {\n baseidentity = \"\";\n }\n tf = IdentityPolicy.userIDExists(baseidentity, false, false); \n if (!tf) \n return baseidentity; \n while (tf) { \n counter+=1; \n identity = baseidentity + counter; \n tf = IdentityPolicy.userIDExists(identity, false, false); \n } \n return identity; \n } \n \n return createIdentity();",
                                        "erpolicytarget": "2;*",
                                        "objectclass": ["top", "erIdentityPolicy", "erPolicyBase", "erPolicyItemBase", "erManagedItem"],
                                        "erpolicyitemname": "Default identity policy for ITIM (Person)",
                                        "erparent": "erglobalid=00000000000000000000,ou=org,dc=Kuldeep"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Identity Policy Management"],
                "summary": "Identity Policy Create",
                "description": "Creates a new Identity Policy with the given attributes. \r\norgID : The ID of the Organization container in which this Identity Policy is to be created. This parameter is required. \r\n_attributes : JSON representation of the Identity Policy attributes to be set. \r\n",
                "parameters": [{
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateIdentityPolicyRequestBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/accesscategories": {
            "get": {
                "tags": ["Access Management"],
                "summary": "Access Categories Search",
                "description": "Returns all access categories defined in Identity Manager.",
                "responses": {
                    "200": {
                        "description": "The request is successfully processed.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BY2Nlc3NSb2xlLG91PWFjY2Vzc1R5cGUsb3U9aXRpbSxvdT1vcmcsZGM9Y29t",
                                            "title": "Role"
                                        }
                                    },
                                    "_attributes": {
                                        "name": "Role"
                                    }
                                }, {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1NYWlsR3JvdXAsb3U9YWNjZXNzVHlwZSxvdT1pdGltLG91PW9yZyxkYz1jb20",
                                            "title": "E-mail group"
                                        }
                                    },
                                    "_attributes": {
                                        "name": "MailGroup"
                                    }
                                }, {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1TaGFyZWRGb2xkZXIsb3U9YWNjZXNzVHlwZSxvdT1pdGltLG91PW9yZyxkYz1jb20",
                                            "title": "Shared folder"
                                        }
                                    },
                                    "_attributes": {
                                        "name": "SharedFolder"
                                    }
                                }, {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ",
                                            "title": "Application"
                                        }
                                    },
                                    "_attributes": {
                                        "name": "Application"
                                    }
                                }, {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1CdXNpbmVzcyxvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ",
                                            "title": "Business"
                                        }
                                    },
                                    "_attributes": {
                                        "name": "Business"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/systemusers/{systemUserId}/delegations": {
            "get": {
                "tags": ["Delegation Management"],
                "summary": "Delegations Lookup",
                "description": "Returns information about the delegations, if any, for the specified user.",
                "parameters": [{
                    "name": "systemUserId",
                    "in": "path",
                    "description": "Unique Identifier for a system user.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "links": {
                                        "delegatee": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ",
                                            "title": "Chuck Riegle"
                                        },
                                        "self": {
                                            "href": "itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations/JGVydWlkPWNyaWVnbGUsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20kMTQyNDEzNjYwMDAwMCQxNDI0MjIzMDAwMDAw"
                                        }
                                    },
                                    "_attributes": {
                                        "endDate": 1424223000000,
                                        "startDate": 1424136600000
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Delegation Management"],
                "summary": "Delegation Add",
                "description": "Adds delegation for the specified user.",
                "parameters": [{
                    "name": "systemUserId",
                    "in": "path",
                    "description": "Unique Identifier for a system user.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DelegateRequestBean"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The delegation schedule is successfully created."
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/accounts": {
            "get": {
                "tags": ["Search"],
                "summary": "Account Search",
                "description": "Returns information about accounts that match the specified search criteria if there are any. \nBy default, no attributes are returned. The client must specify the \"attributes\" query parameter to request the attributes to be returned in the \"_attributes\" property of each account. \nIf wild-card is used, the list of returned attributes is different for different account profiles. \nIf a particular type is searched, the client knows the exact value to pass so that a profile can be searched(Ex.PosixLinuxAccount, ITIMAccount etc.). \n",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes that are returned for each account. The specified attributes are returned in the \"_attributes\" property of each account. Specifying a value of \"*\" returns all attributes. Example - ?attributes=owner,eraccountstatus,eruid,eraccountownershiptype",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for reference attributes of accounts (eg. erservice). The specified attributes are returned in the \"_embedded\" section of the response. Specifying a value of '*' after reference attribute returns all the properties of the reference attribute. Example - ?embedded=erservice.erservicename.",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that the search returns. Example - ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and order (\"+\" for ascending, \"-\" for descending) for sorting the returned account. Note: The client is responsible for performing URL encoding if necessary. Example - ?sort=%2Deruid (%2D is UTF-8 encoding for - sign)",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' option performs the search without referencing any cache. The 'delete-cache' option deletes the cache. In this case, empty search results are returned. Example - Cache-Control = no-cache",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/accounts/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ",
                                            "title": "criegle"
                                        }
                                    },
                                    "_attributes": {
                                        "eruid": "criegle"
                                    }
                                }, {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/accounts/ZXJ1aWQ9YWF1c3RpbixvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ",
                                            "title": "aaustin"
                                        }
                                    },
                                    "_attributes": {
                                        "eruid": "aaustin"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/activities/{activityId}": {
            "get": {
                "tags": ["Activity Management"],
                "summary": "Activity Lookup",
                "description": "Returns information about the specified activity.",
                "parameters": [{
                    "name": "activityId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "format": "int64",
                        "type": "integer"
                    }
                }, {
                    "name": "participantLimit",
                    "in": "query",
                    "description": "Specifies the maximum number of participants for an activity. Specifying a zero (0) indicates that there is no limit.",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "request": {
                                        "id": "2461570965242287130",
                                        "justification": "ghyrh",
                                        "submittedDate": 1428649755392
                                    },
                                    "_links": {
                                        "requester": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9anBlYXJjT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ",
                                            "title": "James Pearch"
                                        },
                                        "request": {
                                            "href": "/itim/rest/requests/2461570965242287130"
                                        },
                                        "requestee": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG91PTAsb3U9cGVvcGxlLGVyZ2xAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                            "title": "Alan Smith"
                                        },
                                        "workitem": {
                                            "href": "/itim/rest/workitems/2461578203364444755"
                                        },
                                        "self": {
                                            "href": "/itim/rest/activities/2461577992772412588",
                                            "title": "Approval activity"
                                        },
                                        "dependentAccesses": [],
                                        "participants": [{
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ",
                                            "title": "Chuck Riegle"
                                        }]
                                    },
                                    "subject": {
                                        "_links": {
                                            "icon": {
                                                "href": "custom/ui/images/access/iconApplicationAccess.gif"
                                            },
                                            "self": {
                                                "href": "/itim/rest/access/2460300160735116790",
                                                "title": "GSA"
                                            }
                                        },
                                        "_attributes": {
                                            "name": "GSA",
                                            "accessCategory": "Application",
                                            "description": "GSA repository.",
                                            "serviceName": "GSA",
                                            "type": "ACCESS",
                                            "accountUserId": "asmith"
                                        }
                                    },
                                    "uiProperties": [{
                                        "name": "ui.activities.displayJustification",
                                        "value": true
                                    }, {
                                        "name": "ui.activities.displayUserComments",
                                        "value": true
                                    }],
                                    "_attributes": {
                                        "requesteeName": "Alan Smith",
                                        "workitemId": "2461578203364444755",
                                        "instructions": "Request for Approval",
                                        "totalNumberOfParticipants": 1,
                                        "requesterName": "James Pearch",
                                        "dueDate": 1428736156784,
                                        "escalated": false,
                                        "name": "Approval activity",
                                        "id": "2461577992772412588",
                                        "type": "APPROVAL",
                                        "status": {
                                            "text": "Pending",
                                            "key": "RequestAuditDataActivity.Status.PENDING"
                                        },
                                        "dueDateWarning": true
                                    },
                                    "actions": {
                                        "approve": {
                                            "code": "AA",
                                            "inProgressLabel": {
                                                "text": "Approving",
                                                "key": "AA_inProgress"
                                            },
                                            "label": {
                                                "text": "Approve",
                                                "key": "AA"
                                            }
                                        },
                                        "reject": {
                                            "code": "AR",
                                            "inProgressLabel": {
                                                "text": "Rejecting",
                                                "key": "AR_inProgress"
                                            },
                                            "label": {
                                                "text": "Reject",
                                                "key": "AR"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/access": {
            "get": {
                "tags": ["Search"],
                "summary": "Access Search",
                "description": "Returns all accesses for the specified user.",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for each access item. The specified attributes are returned in the \"_attributes\" property of each access item. Specifying a value of \"*\" returns all attributes. Example - ?attributes=accessName,accessCategory,isCommon,entityProfile,tags,description,entityType,badges,additionalInformation",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that the search returns. Example - ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "searchForCommonAccess",
                    "in": "query",
                    "description": "Decides whether default search for common access should be executed in request access flow.",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and its order (\"+\" for ascending, \"-\" for descending) by which the returned list of accesses should be sorted. Sorting is currently supported on the following attributes- accessName, accessCategory, description and additionalInformation. Any other attribute will be ignored and the sorting attribute and order will be chosen by the underlying data store (in the case of access it is RDBMS). Example - ?sort=%2BaccessName, ?sort=%2BaccessCategory, ?sort=%2Ddescription, ?sort=%2DadditionalInformation (%2B and %2D is UTF-8 encoding for + and - sign respectively)",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' option searches without referencing any cache. The 'delete-cache' option deletes the cache. In this case, empty search results are returned. Example - Cache-Control = no-cache",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "assignments": {
                                            "href": "/itim/rest/access/assignments"
                                        },
                                        "icon": {
                                            "href": "custom/ui/images/access/iconApplications~BusinessApplications~FinanceAccess.gif"
                                        },
                                        "self": {
                                            "href": "/itim/rest/access/376511431976528341",
                                            "title": "Accounting Plus"
                                        },
                                        "owners": {
                                            "href": "/itim/rest/access/376511431976528341/owners"
                                        }
                                    },
                                    "_attributes": {
                                        "badges": [],
                                        "additionalInformation": " ",
                                        "accessName": "Accounting Plus",
                                        "entityType": 2,
                                        "entityProfile": "LdapGroupProfile",
                                        "accessCategory": "Applications:BusinessApplications:Finance",
                                        "isCommon": false,
                                        "description": "Accounts payable, receivable and more...",
                                        "tags": "Require manager approval |testing 1,2,3"
                                    }
                                }, {
                                    "_links": {
                                        "assignments": {
                                            "href": "/itim/rest/access/assignments"
                                        },
                                        "icon": {
                                            "href": "custom/ui/images/access/iconApplications~SupportApplicationsAccess.gif"
                                        },
                                        "self": {
                                            "href": "/itim/rest/access/376511317273827596",
                                            "title": "Business Partner Connect"
                                        },
                                        "owners": {
                                            "href": "/itim/rest/access/376511317273827596/owners"
                                        }
                                    },
                                    "_attributes": {
                                        "badges": [],
                                        "additionalInformation": " ",
                                        "accessName": "Business Partner Connect",
                                        "entityType": 2,
                                        "entityProfile": "LdapGroupProfile",
                                        "accessCategory": "Applications:SupportApplications",
                                        "isCommon": false,
                                        "description": "Allows business partners to access project manuals and support documentation.",
                                        "tags": "Customer data"
                                    }
                                }, {
                                    "_links": {
                                        "assignments": {
                                            "href": "/itim/rest/access/assignments"
                                        },
                                        "icon": {
                                            "href": "custom/ui/images/access/iconApplicationAccess.gif"
                                        },
                                        "self": {
                                            "href": "/itim/rest/access/3383957381996504114",
                                            "title": "Manager"
                                        },
                                        "owners": {
                                            "href": "/itim/rest/access/3383957381996504114/owners"
                                        }
                                    },
                                    "_attributes": {
                                        "badges": [],
                                        "roleAssignmentAttributes": [{
                                            "_attributes": {
                                                "definedRole": "/itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0",
                                                "assignmentAttributeKey": "StartDate",
                                                "assignmentAttributeLabel": "StartDate",
                                                "definedRoleName": "Manager"
                                            }
                                        }, {
                                            "_attributes": {
                                                "definedRole": "/itim/rest/roles/ZXJnbG9iYWxpZD0zMzgzOTU3MzgxOTk2NTA0MTE0LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWlzaW0",
                                                "assignmentAttributeKey": "EndDate",
                                                "assignmentAttributeLabel": "EndDate",
                                                "definedRoleName": "Manager"
                                            }
                                        }],
                                        "additionalInformation": " ",
                                        "accessName": "Manager",
                                        "entityType": 3,
                                        "entityProfile": "Organization role",
                                        "description": "Allows end user a manager role.",
                                        "isCommon": false,
                                        "tags": "Customer data",
                                        "isEditRoleAssignmnetAttributeAllowedForPerson": true
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Access Management"],
                "summary": "Create Access",
                "description": "\r\n\r\nCreates access for the entity \r\n\r\n Required attributes: \r\n\r\nentityType - Value should be 3 as currently this API only supports creating access for the role \r\n\r\nentityRef - Value should be uuid of the role for which access needs to be created. \r\n\r\naccessCategory - \r\n\r\nIn case of providing accessSubtype value for accessCategory hierarchy of accessType should be provided \r\n\r\ne.g. If Application has subtype ApplicationSubtype and ApplicationSubtype has subtype ApplicationSubtypeChild\r\n\r\nthen to add ApplicationSubtypeChild as accessCategory value should be provided as Application:ApplicationSubtype:ApplicationSubtypeChild\r\n\r\nNote: isCommon attribute is only applicable for static roles not for dynamic roles. \r\n",
                "parameters": [{
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAccessBean"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "accessId": "5065865355324288496"
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/systemusers/{systemUserId}/constraints/password": {
            "get": {
                "tags": ["Password Management"],
                "summary": "System User password constraints Lookup",
                "description": "Returns the password constraints for the specified system user. \r\nThe \"passwordRules\" property is an array listing of each rule for the password. If there are no password rules, an empty array is returned.",
                "parameters": [{
                    "name": "systemUserId",
                    "in": "path",
                    "description": "The System User ID for which you want to retrieve constraints.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma-separated constraints to return for the specified link. The specified constraints are returned in the \"_embedded\" property of the constraint object. Example - ?embedded=passwordConstraints",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints/password",
                                            "title": "Password Constraints"
                                        }
                                    },
                                    "passwordRules": [{
                                        "text": "The minimum number of characters in the password is 1.",
                                        "inserts": ["1"],
                                        "key": "com.ibm.isim.rest.passwordrules.MIN_LENGTH"
                                    }]
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/accesscategories/{accessCategoryID}": {
            "get": {
                "tags": ["Access Management"],
                "summary": "Access Category Lookup",
                "description": "Returns information about a specified access category.",
                "parameters": [{
                    "name": "accessCategoryID",
                    "in": "path",
                    "description": "Unique Identifier for an access category.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "The request is successfully processed.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "children": {
                                            "href": "/itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ/childaccesscategories"
                                        },
                                        "self": {
                                            "href": "/itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ"
                                        }
                                    },
                                    "_attributes": {
                                        "name": "Application"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/workitems/{workitemId}": {
            "put": {
                "tags": ["Activity Management"],
                "summary": "WorkItem Modify",
                "description": "Modifies a work item by executing an action provided for the activity.\r\n\r\nRequest Body Parameters:\r\n\r\nA decision based activity eg. approvals, separation of duty violations, simple user recertifications:\r\n\r\nEither of the following action code should be specified in the request body:\r\n\r\nFor an activity approval : AA\r\n\r\nFor an activity rejection : AR\r\n\r\n\r\n\r\nCompleting a work order request:\r\n\r\nEither of the following action code should be specified in the request body:\r\n\r\nFor an activity success : SS  if you complete the work order.\r\n\r\nFor an activity warning : SW  if the work order is only partially complete.\r\n\r\nFor an activity failure : SF  if you cannot complete the work order.\r\n\r\n\r\n\r\nCompleting a global alert policy enforcement:\r\n\r\nThe following action code should be specified in the request body:\r\n\r\nFor an activity success: SS if you want to correct the noncompliance.\r\n\r\nYou must set attribute deferActivity to false.\r\n\r\n\r\n\r\nDeferring a global alert policy enforcement:\r\n\r\nThe action code should be specified as SS in the request body:\r\n\r\nYou must set attribute deferActivity to true.\r\n\r\nYou must specify deferDate, which is in milliseconds since the standard base time known as \"the epoch\", namely January 1, 1970, 00:00:00 GMT.\r\n\r\n\r\n\r\nProviding request for information:\r\n\r\nThe following action code should be specified in the request body:\r\n\r\nFor an activity request submission: RS.\r\n\r\nYou can specify the value for RFI attributes in rfiAttributeValues.\r\n\r\n\r\n\r\n\r\n\r\n[See request examples](/itim/swaggerdoc/workItemModify.html)",
                "parameters": [{
                    "name": "workitemId",
                    "in": "path",
                    "description": "Unique identifier for a work item.",
                    "required": true,
                    "schema": {
                        "format": "int64",
                        "type": "integer"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkItemUpdateBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK. The request was successful"
                    }
                }
            },
            "post": {
                "tags": ["Activity Management"],
                "summary": "User Re-certification Check Impact",
                "description": "Evaluates the user re-certification impact",
                "parameters": [{
                    "name": "workitemId",
                    "in": "path",
                    "description": "Unique identifier for a work item.",
                    "required": true,
                    "schema": {
                        "format": "int64",
                        "type": "integer"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "X-HTTP-Method-Override",
                    "in": "header",
                    "description": "Specifies the HTTP method override. The value of this parameter is - \"check-recertification\" ",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRecertificationDetailsBean"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "rolesImpactTarget": [{
                                        "ownershipType": "",
                                        "name": "Developers",
                                        "impactedBy": "",
                                        "description": "Developers in Costa Mesa location",
                                        "dependentRecertificationTodoTargets": [],
                                        "dn": "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com",
                                        "impactType": ""
                                    }, {
                                        "ownershipType": "",
                                        "name": "Managers",
                                        "impactedBy": "",
                                        "description": "Managers in Costa Mesa location",
                                        "dependentRecertificationTodoTargets": [],
                                        "dn": "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com",
                                        "impactType": ""
                                    }],
                                    "accountsImpactTarget": [{
                                        "ownershipType": "Individual",
                                        "name": "vm on linux service",
                                        "impactedBy": "",
                                        "description": "",
                                        "dependentRecertificationTodoTargets": [{
                                            "ownershipType": "",
                                            "name": "apache access",
                                            "impactedBy": "",
                                            "description": "Apache access to xyz application",
                                            "dependentRecertificationTodoTargets": [],
                                            "dn": "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com",
                                            "impactType": "explicit"
                                        }],
                                        "dn": "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com",
                                        "impactType": ""
                                    }, {
                                        "ownershipType": "Individual",
                                        "name": "vm on aix service",
                                        "impactedBy": "Developers",
                                        "description": "",
                                        "dependentRecertificationTodoTargets": [],
                                        "dn": "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com",
                                        "impactType": "implicit"
                                    }]
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/activities": {
            "get": {
                "tags": ["Activity Management"],
                "summary": "Activities Search",
                "description": "Returns information about activities that match the specified search criteria.",
                "parameters": [{
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that the search returns. Example. ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "participantLimit",
                    "in": "query",
                    "description": "Specifies the maximum number of participants to return. Example. ?participantLimitParm=10",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and order (\"+\" for ascending, \"-\" for descending) for sorting the returned account.",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' option specifies performs the search without referencing any cache. The 'delete-cache' option deletes the cache. In this case, empty search results are returned. Example - Cache-Control = no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "request": {
                                        "id": "2461570965242287130",
                                        "justification": "ghyrh",
                                        "submittedDate": 1428649755392
                                    },
                                    "_links": {
                                        "requester": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9anBlYXJjT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ",
                                            "title": "James Pearch"
                                        },
                                        "request": {
                                            "href": "/itim/rest/requests/2461570965242287130"
                                        },
                                        "requestee": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD0yNDYwMzAyNDk3OTQ1MjgyODcxLG91PTAsb3U9cGVvcGxlLGVyZ2xAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                            "title": "Alan Smith"
                                        },
                                        "workitem": {
                                            "href": "/itim/rest/workitems/2461578203364444755"
                                        },
                                        "self": {
                                            "href": "/itim/rest/activities/2461577992772412588",
                                            "title": "Approval activity"
                                        },
                                        "dependentAccesses": [],
                                        "participants": [{
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ",
                                            "title": "Chuck Riegle"
                                        }]
                                    },
                                    "subject": {
                                        "_links": {
                                            "icon": {
                                                "href": "custom/ui/images/access/iconApplicationAccess.gif"
                                            },
                                            "self": {
                                                "href": "/itim/rest/access/2460300160735116790",
                                                "title": "GSA"
                                            }
                                        },
                                        "_attributes": {
                                            "name": "GSA",
                                            "accessCategory": "Application",
                                            "description": "GSA repository.",
                                            "serviceName": "GSA",
                                            "type": "ACCESS",
                                            "accountUserId": "asmith"
                                        }
                                    },
                                    "_attributes": {
                                        "requesteeName": "Alan Smith",
                                        "workitemId": "2461578203364444755",
                                        "instructions": "Request for Approval",
                                        "totalNumberOfParticipants": 1,
                                        "requesterName": "James Pearch",
                                        "dueDate": 1428736156784,
                                        "escalated": false,
                                        "name": "Approval activity",
                                        "id": "2461577992772412588",
                                        "type": "APPROVAL",
                                        "status": {
                                            "text": "Pending",
                                            "key": "RequestAuditDataActivity.Status.PENDING"
                                        },
                                        "dueDateWarning": true
                                    },
                                    "actions": {
                                        "approve": {
                                            "code": "AA",
                                            "inProgressLabel": {
                                                "text": "Approving",
                                                "key": "AA_inProgress"
                                            },
                                            "label": {
                                                "text": "Approve",
                                                "key": "AA"
                                            }
                                        },
                                        "reject": {
                                            "code": "AR",
                                            "inProgressLabel": {
                                                "text": "Rejecting",
                                                "key": "AR_inProgress"
                                            },
                                            "label": {
                                                "text": "Reject",
                                                "key": "AR"
                                            }
                                        }
                                    }
                                }, {}, {}]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/requests/{requestId}": {
            "get": {
                "tags": ["Search"],
                "summary": "Request Lookup",
                "description": "Returns information about the specified request.",
                "parameters": [{
                    "name": "requestId",
                    "in": "path",
                    "description": "Unique Identifier for a request.",
                    "required": true,
                    "schema": {
                        "format": "int64",
                        "type": "integer"
                    }
                }, {
                    "name": "activityID",
                    "in": "query",
                    "description": "Specifies the activity ID that requires request information.",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "requester": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNyxvdT0wLG91PXBlb3BsZSxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20",
                                            "title": "System Administrator"
                                        },
                                        "self": {
                                            "href": "/itim/rest/requests/9170709815227290417"
                                        }
                                    },
                                    "obligations": [{
                                        "_auditattributes": {},
                                        "action": "MODIFY_PERSON",
                                        "id": "obligation1",
                                        "_attributes": {
                                            "manager": "erglobalid=7641180504304689103,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"
                                        }
                                    }],
                                    "requests": [{
                                        "_links": {
                                            "requestee": {
                                                "href": "/itim/rest/people",
                                                "title": "Chuck Riegle"
                                            },
                                            "workitem": {
                                                "href": "/itim/rest/workitems/2958404487582489586"
                                            }
                                        },
                                        "subject": {
                                            "_links": {
                                                "formTemplate": {
                                                    "href": "/itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD03NjQxMTgwNTA0NjQxMzAwODc2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ&filterId=formSearch"
                                                },
                                                "self": {
                                                    "href": "/itim/rest/people/ZXJnbG9iYWxpZD03NjQxMTgwNTA0NjQxMzAwODc2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                                    "title": "Chuck Riegle"
                                                },
                                                "erparent": {
                                                    "href": "/itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD04ODE1MzI3OTYxODY1NjE5ODk3LG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ"
                                                }
                                            },
                                            "_attributes": {
                                                "mail": "criegle@ibm.com",
                                                "erparent": "erglobalid=8815327961865619897,ou=orgChart,erglobalid=00000000000000000000,ou=org,dc=com"
                                            }
                                        },
                                        "obligations": [{
                                            "$ref": "obligation1"
                                        }],
                                        "_attributes": {
                                            "action": {
                                                "text": "Edit profile",
                                                "key": "RequestAuditData.Action.MODIFY"
                                            },
                                            "status": {
                                                "text": "Fulfilled",
                                                "key": "RequestAuditData.Status.FULFILLED"
                                            }
                                        }
                                    }],
                                    "_attributes": {
                                        "action": {
                                            "text": "Edit profile",
                                            "key": "RequestAuditData.Action.MODIFY"
                                        },
                                        "justification": "Updating manager",
                                        "id": "9170709815227290417",
                                        "submittedDate": 1430211848230,
                                        "completedDate": 1430211859884,
                                        "status": {
                                            "text": "Fulfilled",
                                            "key": "RequestAuditData.Status.FULFILLED"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/organizationcontainers/{category}": {
            "get": {
                "tags": ["Search"],
                "summary": "Organization Container Search",
                "description": "Returns information about the organization container that matches the specified search criteria if any.",
                "parameters": [{
                    "name": "category",
                    "in": "path",
                    "description": "Specifies the type of organization container to look up. Valid values are - \"admindomains\", \"bporganizations\", \"organizationunits\", \"locations\", and \"organizations\". The values are case-insensitive.",
                    "required": true,
                    "schema": {
                        "enum": ["admindomains", "bporganizations", "organizationunits", "locations", "organizations"],
                        "type": "string"
                    }
                }, {
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for each organizational container. By default, no attributes are returned. The client must specify the \"attributes\" query parameter to request the attributes to be returned in the \"_attributes\" property of each person. A requested attribute is returned if the client does not have permission to retrieve the attribute or if the value of the attribute is null. Specifying a value of \"*\" will return all of the attributes. Example. ?attributes=l",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that search returns. Example. ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and order (\"+\" for ascending, \"-\" for descending) for sorting the returned location. Note: The client is responsible for performing URL encoding if necessary. Example. ?sort=%2Bl (%2B is UTF-8 encoding for + sign)",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' option performs the search without referencing any cache. The 'delete-cache' option deletes the cache. In this case, empty search results are returned. Example - Cache-Control = no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD02MjE5NjY4NDkyODAyNzA0OTU2LG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                            "title": "Raleigh"
                                        },
                                        "erparent": {
                                            "href": "/itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t"
                                        }
                                    },
                                    "_attributes": {
                                        "l": "Raleigh",
                                        "erparent": "erglobalid=00000000000000000000,ou=org,dc=com"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/services": {
            "get": {
                "tags": ["Service Management"],
                "summary": "Search Service",
                "description": "Returns information about services matching the specified search criteria (if any). \r\n\r\nNotes: \r\n\r\nThe \"name\" of the service is returned in the _links.self.title property. \r\n\r\nThe \"statusDetails\" of the service is returned as the _links.statusDetails.href link. \r\n\r\nBy default, no attributes are returned. The client must specify the \"attributes\" query parameter to request the attributes to be returned in the \"_attributes\" property of each service. \r\n\r\nIf a wild-card is used, the list of attributes returned is different for different service profiles. \r\n\r\nTo search a particular type, the client must know the exact value to pass to search that profile(Ex.PosixLinuxProfile). \r\n",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for each service. The specified attributes are returned in the \"_attributes\" property of each service. Specifying a value of \"*\" returns all attributes. Example - ?attributes=erservicename,owner,erparent",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that the search returns. Example - ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and order (\"+\" for ascending, \"-\" for descending) for sorting the returned service. Note: The client is responsible for performing URL encoding if necessary. Example - ?sort=%2Berservicename (%2B is UTF-8 encoding for + sign)",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' option specifies performs the search without refererencing any cache. The 'delete-cache' option deletes the cache. In this case, empty search results are returned. Example - Cache-Control = no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "statusDetails": {
                                            "href": "/itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTEwNjAxNzQ0Mzk1ODUxLG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ/statusdetails",
                                            "title": "statusDetails"
                                        },
                                        "self": {
                                            "href": "/itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTEwNjAxNzQ0Mzk1ODUxLG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                            "title": "GSA"
                                        }
                                    },
                                    "_attributes": {
                                        "description": "GSA hosted on Linux server.",
                                        "erservicename": "GSA"
                                    }
                                }, {
                                    "_links": {
                                        "statusDetails": {
                                            "href": "/itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTExODQwMDg2ODI2MjI0LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ/statusdetails",
                                            "title": "statusDetails"
                                        },
                                        "self": {
                                            "href": "/itim/rest/services/ZXJnbG9iYWxpZD00NjkzMTExODQwMDg2ODI2MjI0LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                            "title": "Fileshare on solaris"
                                        }
                                    },
                                    "_attributes": {
                                        "description": "Fileshare on solaris.",
                                        "erservicename": "Fileshare on solaris"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Service Management"],
                "summary": "Service Create",
                "description": "Creates a new service with the given attributes. \r\nprofileName: Name of the service profile. This is a required parameter. \r\norgID: The ID of the Organization container in which this service is to be created. This parameter is required. \r\n_attributes : JSON representation of the service attributes to be set. \r\n \r\nOptional request body parameters:\r\n manualWorkOrderRequest: This is applicable only when service is to be created in manual connection mode.\r\n If you request service in manual connection mode and do not provide the details for the manualWorkOrderRequest, then the service will\r\n be created with a default data for manual work order.\r\n The manualWorkOrderRequest should be specified in following format : \r\n\r\n \"manualWorkOrderRequest\": {\r\n\r\n      \"participant\": {\r\n            \t\"type\":\"USER\",\r\n             \t\"id\":\"ZXJnbG9iYWxpZD02MzkwMDg1MDQ2MjczNDI3MjQ1LG91PTAsb3U9cGVvcGxlLGVy\r\n                Z2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ\"\r\n       },\r\n      \"escalationParticipant\": {\r\n            \t\"type\":\"ADMINISTRATOR\"\r\n       },\r\n     \t\"escalationPeriod\":\"10\",\r\n     \t\"defaultNotification\":\"true\"\r\n }\r\n \r\n Supported values for participant and escalationParticipant \"type\":\r\n 1) ADMINISTRATOR, SERVICE_OWNER, MANAGER : id value does not required.\r\n 2) USER, ORGANIZATIONAL_ROLE, GROUP : id value required.\r\n \r\n defaultProvisioningPolicyRequest: Should be specified only when you want a default provisioning policy to be created after\r\n the service is created.\r\n If you request service without providing any details for defaultProvisioningPolicyRequest then request does not create default\r\n provisioning policy for a service.\r\n \r\n This should be specified in the following format :\r\n \"defaultProvisioningPolicyRequest\": {\r\n\r\n \t\t\"enabled\":\"true\",\r\n \t\t\"provisioningMode\":\"Automatic\"\r\n }\r\n \r\n \"provisioningMode\" mode, which specifies the provisioning policy mode, should be Automatic or Manual.\r\n\r\n[See more request examples](/itim/swaggerdoc/serviceCreate.html)",
                "parameters": [{
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRequestBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK. The request was successful."
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/systemusers/{systemUserId}/password": {
            "put": {
                "tags": ["Password Management"],
                "summary": "Change Password (System Accounts)",
                "description": "Changes password for the Identity Manager System account.",
                "parameters": [{
                    "name": "systemUserId",
                    "in": "path",
                    "description": "The System User ID to retrieve constraints for.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "maxWaitTime",
                    "in": "query",
                    "description": "Maximum time (in milliseconds) after which the call returns if request is not complete. A value less than 0 is not considered. Example - ?maxWaitTime=5000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "pollingTime",
                    "in": "query",
                    "description": "Frequency (in milliseconds) to check if the request completed. A value less than 0 is not considered. Example - ?pollingTime=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "X-HTTP-Method-Override",
                    "in": "header",
                    "description": "Specifying \"validate\" requests validation of the password. Example - X-HTTP-Method-Override=validate",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordSwaggerBean"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "OK. The request was successful"
                    },
                    "400": {
                        "description": "Bad request. This response is returned if the request header or query parameters are not formatted correctly.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "severity": "E",
                                    "text": "CTGIMH001E The password does not meet the requirements of the password rules.",
                                    "id": "CTGIMH001",
                                    "key": "com.ibm.passwordrules.ONE_OR_MORE_RULES_VIOLATED",
                                    "supportingData": {
                                        "_links": {
                                            "self": {
                                                "href": "/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/password"
                                            },
                                            "systemuser": {
                                                "href": "/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t",
                                                "title": "ITIM Manager"
                                            }
                                        },
                                        "passwordRules": [{
                                            "text": "The minimum number of characters in the password is 1.",
                                            "inserts": ["1"],
                                            "key": "com.ibm.isim.rest.passwordrules.MIN_LENGTH",
                                            "passedValidation": true
                                        }, {
                                            "text": "The maximum number of characters in the password is 5.",
                                            "inserts": ["5"],
                                            "key": "com.ibm.isim.rest.passwordrules.MAX_LENGTH",
                                            "passedValidation": false
                                        }, {
                                            "text": "The maximum repeated characters in the password is 1.",
                                            "inserts": ["1"],
                                            "key": "com.ibm.isim.rest.passwordrules.MAX_SEQUENTIAL",
                                            "passedValidation": true
                                        }, {
                                            "text": "The password must not include the characters \"!@#$\".",
                                            "inserts": ["!@#$"],
                                            "key": "com.ibm.isim.rest.passwordrules.INVALID_CHAR",
                                            "passedValidation": true
                                        }]
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Password Management"],
                "summary": "Validate password (System Account)",
                "description": "Validates password for the Identity Manager System account.",
                "parameters": [{
                    "name": "systemUserId",
                    "in": "path",
                    "description": "The System User ID for which you want to retrieve constraints.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "X-HTTP-Method-Override",
                    "in": "header",
                    "description": "Specifying a value of \"validate\" indicates a request to validate the password. Example - X-HTTP-Method-Override=validate",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ValidatePasswordSwaggerBean"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/password "
                                        },
                                        "systemuser": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t ",
                                            "title": "ITIM Manager"
                                        }
                                    },
                                    "passwordRules": [{
                                        "text": "The minimum number of characters in the password is 1.",
                                        "inserts": ["1"],
                                        "key": "com.ibm.isim.rest.passwordrules.MIN_LENGTH",
                                        "passedValidation": true
                                    }, {
                                        "text": "The maximum number of characters in the password is 5.",
                                        "inserts": ["5"],
                                        "key": "com.ibm.isim.rest.passwordrules.MAX_LENGTH",
                                        "passedValidation": false
                                    }, {
                                        "text": "The maximum repeated characters in the password is 1.",
                                        "inserts": ["1"],
                                        "key": "com.ibm.isim.rest.passwordrules.MAX_SEQUENTIAL",
                                        "passedValidation": false
                                    }, {
                                        "text": "The password must not include the characters \"!@#$\".",
                                        "inserts": ["!@#$"],
                                        "key": "com.ibm.isim.rest.passwordrules.INVALID_CHAR",
                                        "passedValidation": true
                                    }]
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/roles/{roleId}": {
            "get": {
                "tags": ["Search"],
                "summary": "Role Lookup",
                "description": "Returns information about the specified role.",
                "parameters": [{
                    "name": "roleId",
                    "in": "path",
                    "description": "Unique Identifier for a role.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies comma-separated attributes to return for the role. The specified attributes are returned in the \"_attributes\" section of the response. Specifying a value of \"*\" returns all attributes. By default all attributes are returned. Example - ?attributes=owner,errolename,description",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for a reference attribute of role (eg. owner). The specified attributes are returned in the \"_embedded\" section of the response. Specifying a value of '*' after reference attribute returns all the properties of the reference attribute. Example - ?embedded=owner.cn.",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "owner": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ"
                                        },
                                        "self": {
                                            "href": "/itim/rest/roles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMSxvdT1yb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20",
                                            "title": "ITIM Administrators"
                                        },
                                        "erparent": {
                                            "href": "/itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t"
                                        }
                                    },
                                    "_attributes": {
                                        "owner": "erglobalid=6892768069536854,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com",
                                        "errolename": "ITIM Administrators",
                                        "description": "Predefined system administrator role",
                                        "eraccessname": "ITIM Administrators",
                                        "erparent": "erglobalid=00000000000000000000,ou=org,dc=com"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/services/enforcepolicy/{serviceId}": {
            "post": {
                "tags": ["Service Management"],
                "summary": "Enforce Policy for Service",
                "description": "Enforce a policy on the specified service. \r\n\r\nscheduledTime is optional. The scheduled time should be specified in following format : MM/dd/yyyy HH:mm \r\n\r\nIf you want to enforce the policy immediately then provide the null or empty contents (i.e. null or {}) in request body.\r\n",
                "parameters": [{
                    "name": "serviceId",
                    "in": "path",
                    "description": "Unique identifier for a service.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnforcePolicyRequestBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The requested was accepted.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "requestId": "2565810057541954463",
                                    "changeComplete": false,
                                    "status": 0
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/people/person": {
            "get": {
                "tags": ["Person Management"],
                "summary": "People Search for Person Category",
                "description": "Returns information for the specified user that belongs to a Person category. \r\n\r\nThe \"name\" of the user is returned in the _links.self.title property. \r\n\r\nBy default, no attributes are returned. The client must specify the \"attributes\" query parameter to request the attributes that are returned in the \"_attributes\" property of each user. \r\n\r\nA requested attribute is not returned if the client does not have permission to retrieve the attribute or if the value of the attribute is null. \r\n\r\nIf an attribute has multiple values, the value of the corresponding property is an array of the attribute's values. \r\n",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma separated attributes that should be returned for each person. The specified attributes are returned in the \"_attributes\" property of each person. Specifying a value of \"*\" will return all of the attributes. Example - ?attributes=cn,sn",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for a reference attribute of a user (eg. manager). The specified attributes are returned in the \"_embedded\" section of the response. Specifying a value of '*' after reference attribute returns all the properties of the reference attribute. Example - ?embedded=manager.cn",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that the search returns. Example - ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and order (\"+\" for ascending, \"-\" for descending) for sorting the returned result. Note: The client is responsible for performing URL encoding if necessary. Example - ?sort=%2Bcn (%2B is UTF-8 encoding for + sign)",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The \"no-cache\" option performs the search without referencing any cache. The \"delete-cache\" option deletes the cache. In this case, empty search results are returned. Example - Cache-Control=no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99 ",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_embedded": {
                                        "manager": {
                                            "_links": {
                                                "formTemplate": {
                                                    "href": "/itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3UdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch"
                                                },
                                                "self": {
                                                    "href": "/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                                    "title": "Chuck Riegle"
                                                }
                                            },
                                            "_attributes": {
                                                "cn": "Chuck Riegle"
                                            }
                                        }
                                    },
                                    "_links": {
                                        "formTemplate": {
                                            "href": "/itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch"
                                        },
                                        "self": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3Njg0MDU0MDg0MTYsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                            "title": "Alan Smith"
                                        }
                                    },
                                    "_attributes": {
                                        "sn": "Smith",
                                        "cn": "Alan Smith"
                                    }
                                }, {
                                    "_links": {
                                        "formTemplate": {
                                            "href": "/itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t&filterId=formSearch"
                                        },
                                        "self": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD0zMjg3NTk3NjYzMjY3Njc5MDksb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                            "title": "Chuck Riegle"
                                        }
                                    },
                                    "_attributes": {
                                        "sn": "Riegle",
                                        "cn": "Chuck Riegle"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/people/profiles": {
            "get": {
                "tags": ["Person Management"],
                "summary": "Person profile search",
                "description": "Returns all profile types for Person.",
                "responses": {
                    "200": {
                        "description": "OK. The request was successful.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "profiles": ["Person", "BPPerson"]
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/forms/people/{profileName}": {
            "get": {
                "tags": ["Search"],
                "summary": "Form Template Person Profile Lookup",
                "description": "Returns the form of the specified person profile",
                "parameters": [{
                    "name": "profileName",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' option performs the search without referencing any cache. The 'delete-cache' option deletes the cache. In this case, empty search results are returned. Example - Cache-Control = no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "template": {
                                        "page": {
                                            "body": {
                                                "tabbedForm": {
                                                    "tab": [{
                                                        "image": true,
                                                        "formElement": [{
                                                            "input": {
                                                                "size": "50",
                                                                "name": "data.eruid",
                                                                "type": "text"
                                                            },
                                                            "editable": true,
                                                            "name": "data.eruid",
                                                            "constraint": [{
                                                                "parameter": "true",
                                                                "type": "REQUIRED"
                                                            }, {
                                                                "type": "INVALID_CHARS"
                                                            }, {
                                                                "parameter": "true",
                                                                "type": "NO_WHITE_SPACE"
                                                            }],
                                                            "label": "User ID",
                                                            "required": "true"
                                                        }, {
                                                            "input": {
                                                                "size": "50",
                                                                "name": "data.erposixgecos",
                                                                "type": "text"
                                                            },
                                                            "editable": true,
                                                            "name": "data.erposixgecos",
                                                            "label": "Gecos (comments)"
                                                        }, {
                                                            "input": {
                                                                "size": "50",
                                                                "name": "data.erposixuid",
                                                                "type": "text"
                                                            },
                                                            "editable": true,
                                                            "name": "data.erposixuid",
                                                            "constraint": [{
                                                                "parameter": "true",
                                                                "type": "INTEGER_ONLY"
                                                            }, {
                                                                "parameter": "0",
                                                                "type": "MIN_VALUE"
                                                            }],
                                                            "label": "UID number"
                                                        }, {
                                                            "editable": true,
                                                            "checkbox": {
                                                                "name": "checkbox",
                                                                "value": "false"
                                                            },
                                                            "name": "data.erposixdupuid",
                                                            "label": "Allow duplicate UIDs?"
                                                        }, {
                                                            "isHiddenOnModify": "true",
                                                            "editable": true,
                                                            "checkbox": {
                                                                "name": "checkbox",
                                                                "value": "false"
                                                            },
                                                            "name": "data.erposixprivategroup",
                                                            "label": "Do Not Create User Private Group"
                                                        }, {
                                                            "editable": true,
                                                            "name": "data.erposixsudoprivileges",
                                                            "isReadOnlyOnModify": "true",
                                                            "label": "sudo privileges",
                                                            "editableTextList": {
                                                                "comboItem": {
                                                                    "size": true,
                                                                    "width": "300",
                                                                    "name": "data.erposixsudoprivileges",
                                                                    "label": "sudo privileges"
                                                                }
                                                            },
                                                            "direction": "inherit"
                                                        }],
                                                        "index": "0",
                                                        "title": "Account information",
                                                        "selected": "true",
                                                        "url": "javascript:switchTabs (document.forms['body'],0);"
                                                    }, {
                                                        "image": true,
                                                        "formElement": [],
                                                        "index": "1",
                                                        "title": "Access information",
                                                        "selected": "false",
                                                        "url": "javascript:switchTabs (document.forms['body'],1 );"
                                                    }, {
                                                        "image": true,
                                                        "formElement": [],
                                                        "index": "3",
                                                        "title": "Pre Exec and Post Exec Choices",
                                                        "selected": "false",
                                                        "url": "javascript:switchTabs (document.forms['body'],3 );"
                                                    }]
                                                }
                                            }
                                        }
                                    },
                                    "_links": {
                                        "resourcebundle": {
                                            "href": "/itim/rest/forms/resourcebundle"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/accounts/{accountId}": {
            "get": {
                "tags": ["Search"],
                "summary": "Account Lookup",
                "description": "Returns information about the specified account.",
                "parameters": [{
                    "name": "accountId",
                    "in": "path",
                    "description": "Unique Identifier for an account.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for the account. The specified attributes are returned in the \"_attributes\" section of the response. Specifying a value of \"*\" returns all attributes. By default, all the attributes are returned. Example - ?attributes=owner,eraccountstatus,eruid,eraccountownershiptype",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for reference attributes of accounts (eg. erservice). The specified attributes are returned in the \"_embedded\" section of the response. Specifying a value of '*' after reference attribute returns all the properties of the reference attribute. Example - ?embedded=erservice.erservicename.",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "owner": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY3NDYwMzI3MDc1MzQ5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ"
                                        },
                                        "erservice": {
                                            "href": "/itim/rest/services/ZXJnbG9iYWxpZD02ODkyNzU3NDc4MTk3Nzk1MzA2LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ"
                                        },
                                        "self": {
                                            "href": "/itim/rest/accounts/ZXJnbG9iYWxpZD02ODkyNzY3NjE1NTUxODgzNjQzLG91PTAsb3U9YWNjb3VudHMsZXJnbG9MDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                            "title": "asmith"
                                        }
                                    },
                                    "_attributes": {
                                        "owner": "erglobalid=6892767460327075,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com",
                                        "erservice": "erglobalid=6892757478197795,ou=services,erglobalid=00000000000000000000,ou=org,dc=com",
                                        "eruid": "asmith",
                                        "eraccountstatus": "0"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/activities/complianceDetails/{activityId}": {
            "get": {
                "tags": ["Activity Management"],
                "summary": "Compliance Issues Lookup",
                "description": "Returns compliance issues to be resolved for the specified todo activity.",
                "parameters": [{
                    "name": "activityId",
                    "in": "path",
                    "description": "Unique identifier for a activity.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_attributes": {
                                        "name": "Local Groups",
                                        "label": "Local Groups",
                                        "newValues": "Guest"
                                    }
                                }, {
                                    "_attributes": {
                                        "name": "Description",
                                        "label": "Description",
                                        "oldValues": "Distributed Users"
                                    }
                                }, {
                                    "_attributes": {
                                        "name": "Description",
                                        "label": "Description",
                                        "newValues": "Common Users"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/password/challengeresponse/user": {
            "post": {
                "tags": ["Password Management"],
                "summary": "Forgotten Password Questions Lookup",
                "description": "Returns the list of forgotten password questions configured for the user.",
                "parameters": [{
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must passthe valid CSRF token in the request header. When a new PUT, POST, orDELETE request is created, the request header must contain CSRF tokenthat is received to the authorized user. Authorized users must get thevalid CSRF token in the response header by running the 'Current System User Lookup' REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChallengeRequestUserBean"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/password/challengeresponse/user"
                                        }
                                    },
                                    "challenge": ["What is the name of your first company?", "What is your favorite color?", "How many siblings do you have?"]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. This could happen if the forgotten passwordconfiguration is not enabled or the user has not providedanswers to the forgotten password questions.\r\n",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "severity": "E",
                                    "text": "CTGIMM049E The password challenge response function is disabled. Contact the Identity Manager administrator for more information.",
                                    "id": "CTGIMM049",
                                    "key": "com.ibm.itim.webclient.home.SecretQuestionServlet.CHALLENGE_RESPONSE_DISABLED"
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/access/{accessId}/owners": {
            "get": {
                "tags": ["Access Management"],
                "summary": "Access Owners Search",
                "description": "Returns users who are owners of the specified access.",
                "parameters": [{
                    "name": "accessId",
                    "in": "path",
                    "description": "Unique identifier for an access.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for each user. Example - ?attributes=cn,sn",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma separated attributes to return for a user reference attribute (eg. manager). The specified attributes are returned in the \\\"_embedded\\\" section. Example - ?embedded=manager.name,manager.telephoneNumber.",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and its order (\"+\" for ascending, \"-\" for descending) for sorting the returned users. Example - ?sort=+cn",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent \"\r\n\t\t\t\t\t+ \"requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' \"\r\n\t\t\t\t\t+ \"option performs the search without referencing any cache. The 'delete-cache' option deletes the cache. \"\r\n\t\t\t\t\t+ \"In this case, empty search results are returned. Example - Cache-Control = no-cache",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "formTemplate": {
                                            "href": "/itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyODYzNTI3NjE4MDY3LU9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ%26filterId=formSearch"
                                        },
                                        "self": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyODYzNTI3NjE4MDY3LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                            "title": "Alan Smith"
                                        }
                                    }
                                }, {
                                    "_links": {
                                        "formTemplate": {
                                            "href": "/itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyNjE5MTQ0OTg5NDk0LG91PTAcGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ%26filterId=formSearch"
                                        },
                                        "self": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD02MTk0OTcyNjE5MTQ0OTg5NDk0LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                            "title": "Chuck Reigle"
                                        }
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/accesscategories/{accessCategoryID}/childaccesscategories": {
            "get": {
                "tags": ["Access Management"],
                "summary": "Child Access Categories Lookup",
                "description": "Returns all sub-categories of a specified access category.",
                "parameters": [{
                    "name": "accessCategoryID",
                    "in": "path",
                    "description": "Unique Identifier for an access category.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "The request is successfully processed.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbkhpZXIxLGVyb2JqZWN0cHJvZmlsZW5hbWU9QXBwbGljYXRpb24sb3U9YWNjZXNzVHlwZSxvdT1pdGltLG91PW9yZyxkYz1jb20",
                                            "title": "Finance"
                                        }
                                    },
                                    "_attributes": {
                                        "name": "Finance"
                                    }
                                }, {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbjg3NjY4Um9sZTEsZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ",
                                            "title": "HumanResource"
                                        }
                                    },
                                    "_attributes": {
                                        "name": "HumanResource"
                                    }
                                }, {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/accesscategories/ZXJvYmplY3Rwcm9maWxlbmFtZT1zdWJjYXRlZ29yeTEsZXJvYmplY3Rwcm9maWxlbmFtZT1BcHBsaWNhdGlvbixvdT1hY2Nlc3NUeXBlLG91PWl0aW0sb3U9b3JnLGRjPWNvbQ",
                                            "title": "Marketing"
                                        }
                                    },
                                    "_attributes": {
                                        "name": "Marketing"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/forms/resourcebundle": {
            "get": {
                "tags": ["Search"],
                "summary": "Resource Bundle Lookup",
                "description": "Returns resource bundle which contains all the labels for Identity Manager attributes.",
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/forms/resourcebundle"
                                        }
                                    },
                                    "_attributes": {
                                        "0": "Active",
                                        "erservicepassword": "Administrator password",
                                        "1": "Inactive",
                                        "street": "Street",
                                        "reconciliation.monthly": "Monthly",
                                        "eraccessoption": "Access Options",
                                        "erlastoperation": "Last Operation"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/accounts/password": {
            "put": {
                "tags": ["Password Management"],
                "summary": "Get Password Rules/Submit Change Password/Validate Change Password",
                "description": "This endpoint can be used to perform following operations:\n\n[Get Password Rules](/itim/swaggerdoc/Get_Password_Rules.html) - Retrieve password policies that tell users how to create a compliant password. \n[Submit Change Password](/itim/swaggerdoc/Submit_Change_Password.html) - Submit a password to update it. \n[Validate Change Password](/itim/swaggerdoc/Validate_Change_Password.html) - Validate whether the provided password complies with password rules. \n\nClick link to see more details for each request",
                "parameters": [{
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "X-HTTP-Method-Override",
                    "in": "header",
                    "description": "Use 'cumulate' to gather password rules. Example - X-HTTP-Method-Override = cumulate \nUse 'submit-in-batch' to set new password. Example - X-HTTP-Method-Override = submit-in-batch \nUse 'validate-error-check-only' to validate the password against rules. Example - X-HTTP-Method-Override = validate-error-check-only ",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountUpdateBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK. The request was successful"
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/organizationcontainers/{orgContainerId}": {
            "put": {
                "tags": ["Organizational Management API"],
                "summary": "Transfer Organization unit",
                "description": "Moves the organization unit from the current parent container to a new parent",
                "parameters": [{
                    "name": "orgContainerId",
                    "in": "path",
                    "description": "Unique identifier for an organization, organization unit, location, admin domain, busines partner unit.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "parentOrg",
                    "in": "query",
                    "description": "Unique identifier of the new parent container",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "schedule",
                    "in": "query",
                    "description": "The scheduled time should be specified in following format: MM/dd/yyyy HH",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "202": {
                        "description": "The requested was accepted.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "requestId": "2531483138088579374",
                                    "changeComplete": false,
                                    "status": 0
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/activities/rfiformdetails/{workitemId}": {
            "get": {
                "tags": ["Activity Management"],
                "summary": "RFI Form Details Lookup",
                "description": "Returns RFI form details to be resolved for the specified todo activity.",
                "parameters": [{
                    "name": "workitemId",
                    "in": "path",
                    "description": "Unique identifier for a activity.",
                    "required": true,
                    "schema": {
                        "format": "int64",
                        "type": "integer"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "template": {
                                        "page": {
                                            "body": {}
                                        }
                                    },
                                    "container": "/itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                    "processName": "Person Add",
                                    "defaultAttrValues": {
                                        "uid": ["Sachin"],
                                        "employeetype": ["empType1"],
                                        "manager": ["erglobalid=7784750119600149440,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"],
                                        "givenname": ["Sachin Babar"]
                                    },
                                    "id": "CREATE_PERSON",
                                    "operation": "add"
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/authz/v1.0/entitlements/{entitlement}": {
            "post": {
                "tags": ["Entitlement Management"],
                "summary": "Grant and Revoke an Entitlement to one or multiple users",
                "description": "\r\n\r\nGrant and Revoke an Entitlement to one or multiple users \r\n\r\n Required attributes: \r\n\r\n user - Value should be Person ID \r\n",
                "parameters": [{
                    "name": "entitlement",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkGrantRevokeUserEntitlementGrantUserEntitlementRevoke"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": [{
                                    "code": "44e5e3f9-1e6e-4c34-83db-546ddf8cd693",
                                    "success": true,
                                    "operation": "grant"
                                }, {
                                    "code": "44e5e3f9-1e6e-4c34-83db-546ddf8cd693",
                                    "success": true,
                                    "operation": "revoke"
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/people": {
            "get": {
                "tags": ["Person Management"],
                "summary": "Person Search",
                "description": "Returns information about users that match the specified search criteria if any. \r\n\r\nThe \"name\" of the user is returned in the _links.self.title property. \r\n\r\nBy default, no attributes are returned. The client must specify the \"attributes\" query parameter to request the attributes to return in the \"_attributes\" property of each person. \r\n\r\nA requested attribute is not returned if the client does not have permission to retrieve the attribute or if the value of the attribute is null. \r\n\r\nIf an attribute has multiple values, the value of the corresponding property is an array of the attribute's values. \r\n",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma separated attributes that should be returned for each person. The specified attributes are returned in the \"_attributes\" section. Specifying a value of \"*\" returns all attributes. Example - ?attributes=mail,telephoneNumber",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for a user reference attribute (eg. manager). The specified attributes are returned in the \"_embedded\" section. Example - ?embedded=manager.name,manager.telephoneNumber",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "forms",
                    "in": "query",
                    "description": "Specifies the boolean. If true, then form are returned for the user.",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items for the search to return. Example - ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and order (\"+\" for ascending, \"-\" for descending) by which to sort the returned users. Note: The client is responsible for performing URL encoding if necessary. Example - ?sort=%2Bcn (%2B is UTF-8 encoding for + sign)",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "subordinateFilter",
                    "in": "query",
                    "description": "Specifies the boolean. If true, then the returned users are filtered to narrow the search to a logged in users subordinates.",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' option performs the search without referencing any cache. The 'delete-cache' option deletes the cache. In this case, empty search results are returned. Example - Cache-Control=no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99 ",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "http://localhost:9080/itim/rest/people/ZXJnbG9iYWxpZD01Njg4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                            "title": "Judith Hall"
                                        }
                                    },
                                    "_attributes": {
                                        "telephoneNumber": ["555-1111", "555-2222"],
                                        "mail": "jhall@jkenterprises.com"
                                    }
                                }, {
                                    "_links": {
                                        "self": {
                                            "href": "http://localhost:9080/itim/rest/people/ABCnbG8iDFxpTR01Ngh4NjQwOTA5NDk4NTwMDAwMDAsb3U9b3JnLGRjWQVdlZ",
                                            "title": "Chuck Riegle"
                                        }
                                    },
                                    "_attributes": {
                                        "telephoneNumber": "555-3333",
                                        "mail": "criegle@jkenterprises.com"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Person Management"],
                "summary": "Person Create",
                "description": "\r\n\r\nCreates a new person with the given attributes \r\n\r\nprofileName, orgID is required . \r\n\r\nscheduledTime is optional. The scheduled time should be specified in following format : MM/dd/yyyy HH:mm \r\n",
                "parameters": [{
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonRequestBean"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The requested was accepted.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "requestId": "2565810057541954463",
                                    "changeComplete": false,
                                    "status": 0
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/ui/api/v1.0/user/preferences/customization": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/password/challengeresponse/{userid}": {
            "get": {
                "tags": ["Password Management"],
                "summary": "Forgotten Password Questions Lookup (Deprecated)",
                "description": "Returns the list of forgotten password questions configured for the user. \nThis API has been deprecated to restrict passing userId in a URL. For secure lookup of Forgotten Password Questions, use 'Forgotten Password Questions Lookup' API with POST method.\n",
                "parameters": [{
                    "name": "userid",
                    "in": "path",
                    "description": "Specifies the name of the user's Identity Manager System account.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/password/challengeresponse/itim%20manager"
                                        }
                                    },
                                    "challenge": ["What is the name of your first company?", "What is your favorite color?", "How many siblings do you have?"]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. This could happen if the forgotten passwordconfiguration is not enabled or the user has not providedanswers to the forgotten password questions.\r\n",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "severity": "E",
                                    "text": "CTGIMM049E The password challenge response function is disabled. Contact the Identity Manager administrator for more information.",
                                    "id": "CTGIMM049",
                                    "key": "com.ibm.itim.webclient.home.SecretQuestionServlet.CHALLENGE_RESPONSE_DISABLED"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            },
            "put": {
                "tags": ["Password Management"],
                "summary": "Submit Responses for Forgotten Password Questions",
                "description": "Submit responses for forgotten password questions to recover password.",
                "parameters": [{
                    "name": "userid",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must passthe valid CSRF token in the request header. When a new PUT, POST, orDELETE request is created, the request header must contain CSRF tokenthat is received to the authorized user. Authorized users must get thevalid CSRF token in the response header by running the 'Current System User Lookup' REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordSubmitResponseBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/password/challengeresponse/criegle"
                                        }
                                    },
                                    "_attributes": {
                                        "transactionid": "283367112556274689",
                                        "status": "SUCCESS"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. This might happen if the user providedincorrect responses to forgotten password questions.\r\n",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "severity": "E",
                                    "text": "CTGIMM036E The response is incorrect. Enter correct response.",
                                    "id": "CTGIMM036",
                                    "key": "com.ibm.itim.apps.ejb.home.HomeBean.INVALID_ANSWERS"
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/identitypolicy/{identityPolicyId}": {
            "get": {
                "tags": ["Identity Policy Management"],
                "summary": "Identity Policy Lookup",
                "description": "Returns information about the specified Identity Policy.",
                "parameters": [{
                    "name": "identityPolicyId",
                    "in": "path",
                    "description": "Unique Identifier for a Identity Policy.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for the identity policy. The specified attributes are returned in the \"_attributes\" section of the response. Specifying a value of \"*\" returns all attributes. By default, all the attributes are returned. Example - ?attributes=erscope,erlabel",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/identitypolicy/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNixvdT1wb2xpY2llcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1EaXZ5YQ",
                                            "title": "Default identity policy for ITIM (Person)"
                                        },
                                        "erparent": {
                                            "href": "/itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9RGl2eWE",
                                            "title": "Organization"
                                        }
                                    },
                                    "_attributes": {
                                        "eruserclass": "Person",
                                        "erpolicytarget": "2;*",
                                        "erpolicyitemname": "Default identity policy for ITIM (Person)"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Identity Policy Management"],
                "summary": "Identity Policy Modify",
                "description": "Modifies information for the specified Identity Policy.",
                "parameters": [{
                    "name": "identityPolicyId",
                    "in": "path",
                    "description": "Unique identifier for a Identity Policy",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyIdentityPolicyBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "OK. The request was successful"
                    }
                }
            },
            "delete": {
                "tags": ["Identity Policy Management"],
                "summary": "Identity Policy Delete",
                "description": "Deletes the specified Identity Policy.",
                "parameters": [{
                    "name": "identityPolicyId",
                    "in": "path",
                    "description": "Unique identifier for a Identity Policy.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "204": {
                        "description": "No Content."
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/forms": {
            "get": {
                "tags": ["Search"],
                "summary": "Form Template Lookup",
                "description": "Returns the form of the specified entity.",
                "parameters": [{
                    "name": "access",
                    "in": "query",
                    "description": "Specifies the unique identifier of the access. Use this attribute with the requestee parameter to return the form of the account.",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for reference attributes of forms. The parameter allows user to read the resource bundle details. Example - ?embedded=form.resourcebundle",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "requestee",
                    "in": "query",
                    "description": "Specifies the unique identifier of the person for whom the form must be looked up.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' option performs the search without referencing any cache. The 'delete-cache' option deletes the cache. In this case, empty search results are returned. Example - Cache-Control = no-cache",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "template": {
                                        "page": {
                                            "body": {
                                                "tabbedForm": {
                                                    "tab": [{
                                                        "image": true,
                                                        "formElement": [{
                                                            "input": {
                                                                "size": "50",
                                                                "name": "data.eruid",
                                                                "type": "text"
                                                            },
                                                            "editable": true,
                                                            "name": "data.eruid",
                                                            "constraint": [{
                                                                "parameter": "true",
                                                                "type": "REQUIRED"
                                                            }, {
                                                                "type": "INVALID_CHARS"
                                                            }, {
                                                                "parameter": "true",
                                                                "type": "NO_WHITE_SPACE"
                                                            }],
                                                            "label": "User ID",
                                                            "required": "true"
                                                        }, {
                                                            "input": {
                                                                "size": "50",
                                                                "name": "data.erposixgecos",
                                                                "type": "text"
                                                            },
                                                            "editable": true,
                                                            "name": "data.erposixgecos",
                                                            "label": "Gecos (comments)"
                                                        }, {
                                                            "input": {
                                                                "size": "50",
                                                                "name": "data.erposixuid",
                                                                "type": "text"
                                                            },
                                                            "editable": true,
                                                            "name": "data.erposixuid",
                                                            "constraint": [{
                                                                "parameter": "true",
                                                                "type": "INTEGER_ONLY"
                                                            }, {
                                                                "parameter": "0",
                                                                "type": "MIN_VALUE"
                                                            }],
                                                            "label": "UID number"
                                                        }, {
                                                            "editable": true,
                                                            "checkbox": {
                                                                "name": "checkbox",
                                                                "value": "false"
                                                            },
                                                            "name": "data.erposixdupuid",
                                                            "label": "Allow duplicate UIDs?"
                                                        }, {
                                                            "isHiddenOnModify": "true",
                                                            "editable": true,
                                                            "checkbox": {
                                                                "name": "checkbox",
                                                                "value": "false"
                                                            },
                                                            "name": "data.erposixprivategroup",
                                                            "label": "Do Not Create User Private Group"
                                                        }, {
                                                            "editable": true,
                                                            "name": "data.erposixsudoprivileges",
                                                            "isReadOnlyOnModify": "true",
                                                            "label": "sudo privileges",
                                                            "editableTextList": {
                                                                "comboItem": {
                                                                    "size": true,
                                                                    "width": "300",
                                                                    "name": "data.erposixsudoprivileges",
                                                                    "label": "sudo privileges"
                                                                }
                                                            },
                                                            "direction": "inherit"
                                                        }],
                                                        "index": "0",
                                                        "title": "Account information",
                                                        "selected": "true",
                                                        "url": "javascript:switchTabs (document.forms['body'],0);"
                                                    }, {
                                                        "image": true,
                                                        "formElement": [],
                                                        "index": "1",
                                                        "title": "Access information",
                                                        "selected": "false",
                                                        "url": "javascript:switchTabs (document.forms['body'],1 );"
                                                    }, {
                                                        "image": true,
                                                        "formElement": [],
                                                        "index": "3",
                                                        "title": "Pre Exec and Post Exec Choices",
                                                        "selected": "false",
                                                        "url": "javascript:switchTabs (document.forms['body'],3 );"
                                                    }]
                                                }
                                            }
                                        }
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/forms?access=/itim/rest/access/6892757478197795306&filterId=formSearch"
                                        },
                                        "resourcebundle": {
                                            "href": "/itim/rest/forms/resourcebundle"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Search"],
                "summary": "Label Lookup",
                "description": "Returns label information about an attribute. For example - label of attribute \"cn\" is \"Full Name\".",
                "parameters": [{
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "description": "Default value : cn,sn,mail",
                    "content": {
                        "*/*": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": ["Full name", "Last name", "E-mail address"]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/lifecyclerule": {
            "get": {
                "tags": ["Search"],
                "summary": "Search All LifecycleRules",
                "description": "Returns information about the lifecycle Rule that match the specified search criteria.",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for the LifecycleRule. The specified attributes are returned in the \"_attributes\" section of the response. Specifying a value of \"*\" returns all attributes.",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "ruleType",
                    "in": "query",
                    "description": "Specifies the rule type to be searched.",
                    "required": true,
                    "schema": {
                        "enum": ["PROFILE_TYPE", "CATEGORY_TYPE", "RECERT_POLICY_TYPE"],
                        "type": "string"
                    }
                }, {
                    "name": "typeInfo",
                    "in": "query",
                    "description": " String representing the type info to be searched. The values that can be specified for typeInfo depends on ruleType and is summarized below.To search rules at Global or other entity type level specify ruleType=CATEGORY_TYPE and typeInfo = Global, Account, Person or BPPerson. To search rules for a specific entity specify ruleType=PROFILE_TYPE and typeInfo = the profile name of the entity, like ADProfile, ITIMAccount, Person etc. To search rules for a specific recertification policy, specify ruleType=RECERT_POLICY_TYPE and typeInfo = the DN of the recertification policy.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/lifecyclerule/OTA4ODM0OTc2NDIwODE5ODI4MHxDQVRFR09SWV9UWVBFfEFjY291bnQ",
                                            "title": "Delete Person LCR"
                                        }
                                    },
                                    "_attributes": {
                                        "filter": "",
                                        "name": "Delete Person LCR",
                                        "description": "Lifecycle Rule to delete terminated person",
                                        "ruleid": 9088349764208198280,
                                        "operation": "delete"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["LifecycleRule Management"],
                "summary": "Add LifecylceRule",
                "description": "Create a new LifecylceRule with the given attributes. Following is the description of attributes that are supported. \r\n\r\nruleType : Mandatory Parameter in request body. Specifies the rule type. Allowed values for different rule types are PROFILE_TYPE, CATEGORY_TYPE and RECERT_POLICY_TYPE. \r\n\r\ntypeInfo : Mandatory Parameter in request body. String representing the type info for different rule types. The values that can be specified for typeInfo depends on ruleType and is summarized below. \r\n\r\nTo add a rule at Global or other entity type level specify ruleType=CATEGORY_TYPE and typeInfo = Global, Account, Person or BPPerson \r\n\r\nTo add a rule for a specific entity specify ruleType=PROFILE_TYPE and typeInfo = the profile name of the entity, like ADProfile, ITIMAccount, Person etc. \r\n\r\n_attributes : JSON representation of the lifecycle attributes to be set. Following attributes can be specified. \r\n\r\nname : It is a mandatory attribute and specifies the name of the lifecycle rule to be created. \r\n\r\ndescription : It is an optional attribute that can be used to set the description of the lifecycle Rule. \r\n\r\nOperationName : It is mandatory attribute that specifies the name of the operation to be invoked by the lifecycle Rule. \r\n\r\nFilter : It is an optional attribute and can be used to set the lifecycle rule filter. Filter is not set for typeInfo (Global). \r\n\r\nschedules : JSON representation of array of lifecycle schedules to be set. It is an optional attribute. In each schedule you can specify hour, minute, month, day of the week, days of the week, day of the month, quarterly, and semi-annually. Each attribute of the schedule JSON is explained below. \r\n\r\nhour: hour of the schedule. Allowed values are 0-23. To specify hourly schedule set hour = -1. \r\n\r\nminute : minute of the schedule. Allowed values are 0-59. \r\n\r\ndayOfMonth : day of month of the schedule (-1 if every day). This attribute is exclusive with dayOfWeek. To set the dayOfMonth value other than -1(daily), the month value must be set either to specific month or -1(monthly). Allowed values are 1-28, if the schedule is set to monthly, otherwise the allowed value varies according to the month value. \r\n\r\nmonth : month of the schedule (-1 if every month). Allowed values are 1-12 (1 = January, 2 = February, ...). \r\n\r\ndayOfWeek : day of week of the schedule (-1 if every day). This attribute is deprecated for weekly schedule. This attribute is exclusive with dayOfMonth. Allowed values are 1-7 (1 = Sunday, 2 = Monday,...) \r\n\r\ndaysOfWeek : days of week of the weekly schedule. Allowed values are 1-7 (1 = Sunday, 2 = Monday,...) and multiple values are specified in pipe-separated format (1|2 = Sunday and Monday). Value should be the valid String or the null. \r\n\r\ndayOfQuarter : (0 to disable quarterly schedule, otherwise 1-90). dayOfQuarter is exclusive with dayOfMonth, dayOfWeek and dayOfSemiAnnual. Therefore if dayOfQuarter is set then value of dayOfMonth and dayOfWeek is ignored. \r\n\r\ndayOfSemiAnnual : (0 to disable semi-annual schedule, otherwise 1-180). dayOfSemiAnnual is exclusive with dayOfMonth, dayOfWeek and dayOfQuarter. \r\n",
                "parameters": [{
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateLifecycleRuleRequestBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/lifecyclerule/MTI3NzcwMDUxODgxOTE5ODYwNnxDQVRFR09SWV9UWVBFfEFjY291bnQ",
                                            "title": "Suspend Dormant Account LCR"
                                        }
                                    },
                                    "_attributes": {
                                        "Filter": "(cn=*)",
                                        "schedules": {
                                            "dayOfWeek": 0,
                                            "hour": 12,
                                            "month": 0,
                                            "dayOfMonth": -1,
                                            "minute": 0
                                        },
                                        "name": "Suspend Dormant Account LCR",
                                        "description": "LCR to suspend dormant accounts",
                                        "ruleid": 1277700518819198606,
                                        "operation": "suspend"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "severity": "E",
                                    "text": "CTGIMZ052E HTTP POST request data has a missing data for required field \"name\".",
                                    "id": "CTGIMZ052",
                                    "inserts": ["name"],
                                    "key": "com.ibm.isim.rest.data.MISSING_DATA_FOR"
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/organizationcontainers": {
            "get": {
                "tags": ["Search"],
                "summary": "Search All Organization Containers",
                "description": "Returns list of all the organization containers.",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for each organizational container. By default, no attributes are returned. The client must specify the \"attributes\" query parameter to request the attributes to be returned in the \"_attributes\" property of each organizational container. A requested attribute is returned if the client does not have permission to retrieve the attribute or if the value of the attribute is null. Specifying a value of \"*\" will return all of the attributes. Example. ?attributes=l",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' option performs the search without referencing any cache. The 'delete-cache' option deletes the cache. In this case, empty search results are returned. Example - Cache-Control = no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/organizationcontainers/locations/ZXJnbG9iYWxpZD02MjE5NjY4NDkyODAyNzA0OTU2LG91PW9yZ0NoYXJ0LGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                            "title": "Raleigh"
                                        },
                                        "erparent": {
                                            "href": "/itim/rest/organizationcontainers/organizations/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t"
                                        }
                                    },
                                    "_attributes": {
                                        "l": "Raleigh",
                                        "erparent": "erglobalid=00000000000000000000,ou=org,dc=com"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/activities/userrecertdetails/{workitemId}": {
            "get": {
                "tags": ["Activity Management"],
                "summary": "User Re-certification Details Lookup",
                "description": "Returns User re-certification details for the specified todo activity.",
                "parameters": [{
                    "name": "workitemId",
                    "in": "path",
                    "description": "Unique identifier for a work item.",
                    "required": true,
                    "schema": {
                        "format": "int64",
                        "type": "integer"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "accountsToCertify": [{
                                        "ownershipType": "Individual",
                                        "decision": true,
                                        "name": "vm on linux service",
                                        "description": "",
                                        "dependentRecertificationTodoTargets": [{
                                            "ownershipType": "",
                                            "decision": true,
                                            "name": "apache access",
                                            "description": "Apache access to xyz application",
                                            "dependentRecertificationTodoTargets": [],
                                            "dn": "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                                        }],
                                        "dn": "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                                    }, {
                                        "ownershipType": "Individual",
                                        "decision": true,
                                        "name": "vm on aix service",
                                        "description": "",
                                        "dependentRecertificationTodoTargets": [],
                                        "dn": "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                                    }],
                                    "comment": "",
                                    "justification": "",
                                    "rolesToCertify": [{
                                        "ownershipType": "",
                                        "decision": true,
                                        "name": "Developers",
                                        "description": "Developers in Costa Mesa location",
                                        "dependentRecertificationTodoTargets": [],
                                        "dn": "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
                                    }, {
                                        "ownershipType": "",
                                        "decision": true,
                                        "name": "Managers",
                                        "description": "Managers in Costa Mesa location",
                                        "dependentRecertificationTodoTargets": [],
                                        "dn": "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
                                    }]
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/people/selfregister": {
            "post": {
                "tags": ["Person Management"],
                "summary": "Person Self Register",
                "description": "Creates a person in the provisioning platform without accessing the system with an Identity Manager account login and password. \r\n\r\nprofileName, orgID is required.\r\n",
                "parameters": [{
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SelfRegisterPersonRequestBean"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted."
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/requests": {
            "get": {
                "tags": ["Search"],
                "summary": "Requests Search",
                "description": "Returns information about requests matching the specified search criteria, if any. \r\nBy default, all information is returned for each entry in the array, which makes each search entry identical to a Request Lookup API. \r\nA request is not returned if the client does not have permission to access it. \r\n",
                "parameters": [{
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that the search returns. Example - ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the order (\"+\" for ascending, \"-\" for descending) for sorting the returned requests. Note: The client is responsible for performing URL encoding if necessary. The valid attributes used in the sort are - requestee, status, date. By default, the entries are sorted by date in descending order. Example - ?sort=%2Brequestee (%2B is UTF-8 encoding for + sign)",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The \"no-cache\" option performs the search without referencing any cache. The \"delete-cache\" option deletes the cache. In this case, empty search results are returned. Example - Cache-Control=no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99 ",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful\r\n\r\n[Please click here to view more details of the status code description ](/itim/swaggerdoc/Status_Info.html)",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "requester": {
                                            "href": "/itim/rest/people/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwNyxvdT0wLG91PXBlb3BsZSxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20",
                                            "title": "System Administrator"
                                        },
                                        "self": {
                                            "href": "/itim/rest/requests/2186821305970425066"
                                        }
                                    },
                                    "obligations": [{
                                        "form": {
                                            "page": {
                                                "body": {
                                                    "form": {
                                                        "formElement": [{
                                                            "input": {
                                                                "size": "50",
                                                                "name": "data.eruid",
                                                                "type": "text"
                                                            },
                                                            "editable": true,
                                                            "name": "data.eruid",
                                                            "constraint": {
                                                                "parameter": "true",
                                                                "type": "REQUIRED"
                                                            },
                                                            "label": "User ID",
                                                            "required": "true",
                                                            "direction": "inherit"
                                                        }, {
                                                            "input": {
                                                                "size": "50",
                                                                "name": "data.cn",
                                                                "type": "text"
                                                            },
                                                            "editable": true,
                                                            "name": "data.cn",
                                                            "constraint": {
                                                                "parameter": "true",
                                                                "type": "REQUIRED"
                                                            },
                                                            "label": "Full name",
                                                            "required": "true",
                                                            "direction": "inherit"
                                                        }, {
                                                            "input": {
                                                                "size": "50",
                                                                "name": "data.sn",
                                                                "type": "text"
                                                            },
                                                            "editable": true,
                                                            "name": "data.sn",
                                                            "constraint": {
                                                                "parameter": "true",
                                                                "type": "REQUIRED"
                                                            },
                                                            "label": "Last name",
                                                            "required": "true",
                                                            "direction": "inherit"
                                                        }, {
                                                            "editable": true,
                                                            "name": "data.description",
                                                            "loginHours": {
                                                                "orientation": "landscape",
                                                                "interval": "onehour"
                                                            },
                                                            "label": "Authorized hours",
                                                            "direction": "inherit"
                                                        }],
                                                        "action": "formvalidator0"
                                                    }
                                                }
                                            }
                                        },
                                        "action": "CREATE_ACCOUNT",
                                        "id": "obligation1",
                                        "_attributes": {
                                            "employeenumber": "Z456123",
                                            "mail": "criegle@jke.test",
                                            "telephonenumber": "1-512-456-3451",
                                            "givenname": "Chuck",
                                            "initials": "",
                                            "eruid": "criegle",
                                            "cn": "Chuck Riegle",
                                            "sn": "Riegle",
                                            "title": "Senior Manager Accounting",
                                            "erldappwdreset": "true"
                                        }
                                    }],
                                    "requests": [{
                                        "_links": {
                                            "requestee": {
                                                "href": "/itim/rest/people/ZXJnbG9iYWxpZD0zNzY0OTc5NjgzODMzODA1NTEsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                                "title": "Chuck Riegle"
                                            },
                                            "workitem": {
                                                "href": "/itim/rest/workitems/2958404487582489586"
                                            }
                                        },
                                        "subject": {
                                            "_links": {
                                                "icon": {
                                                    "href": "custom/ui/images/access/iconApplications~SupportApplicationsAccess.gif"
                                                },
                                                "self": {
                                                    "href": "/itim/rest/access/376511317273827596"
                                                }
                                            },
                                            "_attributes": {
                                                "accessName": "Business Partner Connect",
                                                "description": "Allows business partners to access project manuals and support documentation.",
                                                "serviceName": "Application Server"
                                            }
                                        },
                                        "obligations": [{
                                            "$ref": "obligation1"
                                        }],
                                        "_attributes": {
                                            "action": {
                                                "text": "New access request",
                                                "key": "AccessRequestAuditDataAccess.Action.ADD"
                                            },
                                            "status": {
                                                "text": "Pending",
                                                "key": "AccessRequestAuditDataAccess.Status.PENDING"
                                            }
                                        }
                                    }, {
                                        "_links": {
                                            "requestee": {
                                                "href": "/itim/rest/people/ZXJnbG9iYWxpZD0zNzY0OTc5NjgzODMzODA1NTEsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                                "title": "Chuck Riegle"
                                            },
                                            "workitem": {
                                                "href": "/itim/rest/workitems/2958404487582489586"
                                            }
                                        },
                                        "subject": {
                                            "_links": {
                                                "icon": {
                                                    "href": "custom/ui/images/access/iconFilesharesAccess.gif"
                                                },
                                                "self": {
                                                    "href": "/itim/rest/access/376511866909527916"
                                                }
                                            },
                                            "_attributes": {
                                                "accessName": "North Region File Share",
                                                "description": "File share containing region project files including confidential data.",
                                                "serviceName": "GSA"
                                            }
                                        },
                                        "obligations": [],
                                        "_attributes": {
                                            "action": {
                                                "text": "New access request",
                                                "key": "AccessRequestAuditDataAccess.Action.ADD"
                                            },
                                            "status": {
                                                "text": "Pending",
                                                "key": "AccessRequestAuditDataAccess.Status.PENDING"
                                            }
                                        }
                                    }],
                                    "_attributes": {
                                        "action": {
                                            "text": "Manage Access",
                                            "key": "RequestAuditData.Action.ACCESS_BATCH_REQUEST"
                                        },
                                        "justification": "User Need access",
                                        "id": "2186821305970425066",
                                        "submittedDate": 1430733268995,
                                        "status": {
                                            "text": "Pending",
                                            "key": "RequestAuditData.Status.PENDING"
                                        }
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/services/{serviceId}/statusdetails": {
            "get": {
                "tags": ["Service Management"],
                "summary": "Lookup Service Status",
                "description": "Returns information about the status of the service. Service status can be : \r\n\r\nALIVE - Last attempt to contact the service was successful. \r\n\r\nFAILED - Last attemp to contact the service failed. \r\n\r\nLOCKED_RECON_IN_PROGRESS - System is currently reconciling the service. \r\n\r\nATTEMPTING_RECOVERY - System is trying to recover the service. \r\n\r\nUNKNOWN - Status is unknown. \r\n",
                "parameters": [{
                    "name": "serviceId",
                    "in": "path",
                    "description": "Unique Identifier for a service.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_attributes": {
                                        "status": "ALIVE"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/systemusers/{systemUserId}/delegations/{delegateId}": {
            "put": {
                "tags": ["Delegation Management"],
                "summary": "Delegation Modify",
                "description": "Modifies the delegations for the specified user.",
                "parameters": [{
                    "name": "delegateId",
                    "in": "path",
                    "description": "Unique identifier for a delegation.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "systemUserId",
                    "in": "path",
                    "description": "Unique identifier for a system user.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DelegateRequestBean"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": ["Delegation Management"],
                "summary": "Delegation Delete",
                "description": "Deletes the delegation for the specified user.",
                "parameters": [{
                    "name": "delegateId",
                    "in": "path",
                    "description": "Unique identifier for a delegation.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "systemUserId",
                    "in": "path",
                    "description": "Unique identifier for a system user.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful."
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/entities/attributeslist": {
            "get": {
                "tags": ["Search"],
                "summary": "Attribute Names Lookup",
                "description": "Returns the list of attributes configured for an objectclass . This API is used in conjunction with form template REST API. ISIM forms contains widgets in which the object class is configured by System Administrator. \r\nThis object class is returned by \"form tempalate\" REST API in an encrypted format. The API decrypts this object class and returns the list of attributes.\r\n",
                "parameters": [{
                    "name": "com.ibm.isim.rest.accesstoken",
                    "in": "header",
                    "description": "This mandatory header parameter contains the encrypted object class whose attributes are to be listed. This token will be generated by the \"form template\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful.",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "attributeLabel": "Administrative assistant",
                                    "_attributes": {
                                        "name": "secretary",
                                        "label": "Administrative assistant"
                                    }
                                }, {
                                    "attributeLabel": "Business category",
                                    "_attributes": {
                                        "name": "businesscategory",
                                        "label": "Business category"
                                    }
                                }, {
                                    "attributeLabel": "E-mail address",
                                    "_attributes": {
                                        "name": "mail",
                                        "label": "E-mail address"
                                    }
                                }, {
                                    "attributeLabel": "Employee number",
                                    "_attributes": {
                                        "name": "employeenumber",
                                        "label": "Employee number"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/systemusers": {
            "get": {
                "tags": ["System User Management"],
                "summary": "System User Search",
                "description": "Returns information about any system user that matches the specified search criteria. \r\n\nThe \"name\" of the system user is returned in the _links.self.title property. \r\n\nBy default, no attributes are returned. The client must specify the \"attributes\" query parameter to request the attributes that are returned in the \"_attributes\" property of each system user. \r\n\nA requested attribute is not returned if the client does not have permission to retrieve the attribute or if the value of the attribute is null. \r\n\nIf an attribute has multiple values, the value of the corresponding property is an array of the attribute's values. \r\n",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return each system user. The specified attributes are returned in the \"_attributes\" section of the response. If the excludeAttributeFromResponse property in the rest.properties is set to some attribute value, that attribute is excluded from the response though it is specified in the attribute list. Specifying a value \"*\" returns all of attributes except those that are specified in the excludeAttributeFromResponse property. By default, all attributes other than those that are specified in the excludeAttributeFromResponse property are returned. Example - ?attributes=eruid",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that the search operation returns. Example - ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and order for sorting the returned system users. \"+\" represents ascending order while \"-\" represents descending order. Note: The client is responsible to perform URL encoding if necessary. Example - ?sort=%2Beruid (%2B is UTF-8 encoding for + sign)",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The \"no-cache\" option performs the search without referencing any cache. The \"delete-cache\" option deletes the cache. In this case, empty search results are returned. Example - Cache-Control=no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t",
                                            "title": "ITIM Manager"
                                        },
                                        "delegates": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/delegations"
                                        },
                                        "constraints": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9SVRJTSBNYW5hZ2VyLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t/constraints",
                                            "title": "Constraints"
                                        }
                                    },
                                    "_attributes": {
                                        "eruid": "ITIM Manager"
                                    }
                                }, {
                                    "_links": {
                                        "expiredPassword": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20/password",
                                            "title": "Expired Password"
                                        },
                                        "self": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20",
                                            "title": "chuck"
                                        },
                                        "delegates": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20/delegations"
                                        },
                                        "constraints": {
                                            "href": "/itim/rest/systemusers/ZXJ1aWQ9a3VtYXIsb3U9c3lzdGVtVXNlcixvdT1pdGltLG91PW9yZyxkYz1jb20/constraints",
                                            "title": "Constraints"
                                        }
                                    },
                                    "_attributes": {
                                        "eruid": "chuck"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/services/{serviceId}": {
            "get": {
                "tags": ["Service Management"],
                "summary": "Lookup Service",
                "description": "Returns information about the specified service.",
                "parameters": [{
                    "name": "serviceId",
                    "in": "path",
                    "description": "Unique Identifier for a service.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for the service. The specified attributes are returned in the \"_attributes\" section of the response. Specifying a value of \"*\" will return all of the attributes. By default all the attributes are returned. Example - ?attributes=erservicename,description",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "embedded",
                    "in": "query",
                    "description": "Specifies the comma separated attributes that should be returned for a reference attribute of service (eg. owner). The specified attributes are returned in the \"_embedded\" section of the response. Specifying a value of '*' after reference attribute returns all the properties of the reference attribute. Example - ?embedded=owner.cn",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": {
                                    "_links": {
                                        "statusDetails": {
                                            "href": "/itim/rest/services/ZXJnbG9iYWxpZD02ODkyNzU3OTU5MDMzNjk0MjkyLG91PXNlcnZpY2VzLG/statusdetails",
                                            "title": "statusDetails"
                                        },
                                        "self": {
                                            "href": "/itim/rest/services/ZXJnbG9iYWxpZD02ODkyNzU3OTU5MDMzNjk0MjkyLG91PXNlcnZpY2VzLG",
                                            "title": "GSA"
                                        }
                                    },
                                    "_embedded": {
                                        "owner": {
                                            "_links": {
                                                "formTemplate": {
                                                    "href": "/itim/rest/forms?requestee=/itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAU9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwwMDAwMDAsb3U9b3JnLGRjPWNvbQ&filterId=formSearch"
                                                },
                                                "self": {
                                                    "href": "/itim/rest/people/ZXJnbG9iYWxpZD02ODkyNzY4MDY5NTM2ODU0NTQ2LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                                    "title": "Judith Hill"
                                                }
                                            },
                                            "_attributes": {
                                                "cn": "Judith Hill"
                                            }
                                        }
                                    },
                                    "_attributes": {
                                        "erservicename": "GSA"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Service Management"],
                "summary": "Service Modify",
                "description": "Modifies information for the specified service.\r\n\r\nBy using this rest API you can perform following different operations along with modification\r\nof the service information.\r\n1) Switch the connection mode of the existing service from Automatic to Manual and vice versa.\r\n2) Modify information for the manual work order details.\r\n3) If you trying to switch the existing service from Automatic to Manual and do not provide the\r\ndetails for the manualWorkOrderRequest then request adds the default data for manual work order.\r\n",
                "parameters": [{
                    "name": "serviceId",
                    "in": "path",
                    "description": "Unique identifier for a service.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyServiceRequestBeanSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK. The request was successful."
                    }
                }
            },
            "delete": {
                "tags": ["Service Management"],
                "summary": "Service Delete",
                "description": "Deletes the specified service.",
                "parameters": [{
                    "name": "serviceId",
                    "in": "path",
                    "description": "Unique identifier for a service.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must pass the valid CSRF token in the request header. When a new PUT, POST, or DELETE request is created, the request header must contain CSRF token that is received to the authorized user. Authorized users must get the valid CSRF token in the response header by running the \"Current System User Lookup\" REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful."
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/systemroles": {
            "get": {
                "tags": ["Search"],
                "summary": "System Role (ITIM Group) Search",
                "description": "Returns information about any system roles that match the specified search criteria. \r\nThe \"name\" of the system role is returned in the _links.self.title property. \r\nBy default, no attributes are returned. The client must specify the \"attributes\" query parameter to request the attributes to return in the \"_attributes\" property of each system role. \r\nA requested attribute is not returned if the client does not have permission to retrieve the attribute or if the value of the attribute is null. \r\nIf an attribute has multiple values, the value of the corresponding property is an array of the attribute's values.\r\n",
                "parameters": [{
                    "name": "attributes",
                    "in": "query",
                    "description": "Specifies the comma-separated attributes to return for each system role. The specified attributes are returned in the \"_attributes\" property of each system role. Specifying a value of \"*\" returns all attributes. Example - ?attributes=errolename",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items that should be returned by the search. Example - ?limit=1000",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "description": "Specifies the attribute and order (\"+\" for ascending, \"-\" for descending) for sorting the returned system roles. Note: The client is responsible for performing URL encoding if necessary. Example - ?sort=%2Berrolename (%2B is UTF-8 encoding for + sign)",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Cache-Control",
                    "in": "header",
                    "description": "Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The \"no-cache\" option performs the search without referencing cache. The \"delete-cache\" option deletes the cache. In this case, empty search results are returned. Example - Cache-Control = no-cache ",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "Range",
                    "in": "header",
                    "description": "Specifies the range of items to return. Note: The range uses a zero-based index. Example - items=0-99",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAzNCxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20",
                                            "title": "Help Desk Assistant"
                                        }
                                    },
                                    "_attributes": {
                                        "errolename": "Help Desk Assistant"
                                    }
                                }, {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDA0OCxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20",
                                            "title": "Manager"
                                        }
                                    },
                                    "_attributes": {
                                        "errolename": "Manager"
                                    }
                                }, {
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/systemroles/ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMyxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20",
                                            "title": "System Administrator"
                                        }
                                    },
                                    "_attributes": {
                                        "errolename": "System Administrator"
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/password/retrieve": {
            "put": {
                "tags": ["Password Management"],
                "summary": "Retrieve Password",
                "description": "Retrieves the password of an account if the enrole.workflow.notifypasswordproperty is set to false. This API needs the transaction ID to retrieve password.To return the account password to the user, the shared secret has been validated.",
                "parameters": [{
                    "name": "transactionid",
                    "in": "query",
                    "description": "Specifies the transaction ID that is required to retrieve the password retrieval info.",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "CSRFToken",
                    "in": "header",
                    "description": "To prevent cross-site request forgery (CSRF) attacks, a user must passthe valid CSRF token in the request header. When a new PUT, POST, orDELETE request is created, the request header must contain CSRF tokenthat is received to the authorized user. Authorized users must get thevalid CSRF token in the response header by running the 'Current System User Lookup' REST API.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RetrievePasswordSwagger"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK. The request was successful",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_embedded": {
                                        "accounts": [{
                                            "_embedded": {
                                                "service": {
                                                    "_attributes": {
                                                        "description": "",
                                                        "erservicename": "ITIM Service"
                                                    }
                                                }
                                            },
                                            "_links": {
                                                "self": {
                                                    "href": "/itim/rest/accounts/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t"
                                                }
                                            },
                                            "_attributes": {
                                                "erUid": "person1"
                                            }
                                        }]
                                    },
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/password/retrieve?transactionid=7347766403446710787"
                                        }
                                    },
                                    "_attributes": {
                                        "password": "password"
                                    }
                                }]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Invalid Transaction ID",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "severity": "E",
                                    "text": "CTGIMZ058E The transaction identifier that is referred in the URI is invalid or expired.",
                                    "id": "CTGIMZ058",
                                    "key": "com.ibm.isim.rest.server.INVALID_TRANSACTION_ID"
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/requests/quicksearches": {
            "get": {
                "tags": ["Search"],
                "summary": "Request Quick Searches",
                "description": "Quick search categories help you to narrow the scope of your search so that you can locate the request that you want to view.\r\nReturns limited results based on search query.",
                "parameters": [{
                    "name": "limit",
                    "in": "query",
                    "description": "Specifies the maximum number of items per category to return. If unspecified, the limit is system defined. A value of 0 means unlimited, which is constrained by a system limit. Example - ?limit=5",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK. The request was successful \r\n\r\n[Please click here to view more details of the status code description ](/itim/swaggerdoc/Status_Info.html)",
                        "content": {
                            "application/vnd.ibm.isim-v1+json": {
                                "example": [{
                                    "_links": {
                                        "self": {
                                            "href": "/itim/rest/requests/quicksearches?limit=5"
                                        }
                                    },
                                    "_attributes": {
                                        "requestees": [{
                                            "_links": {
                                                "self": {
                                                    "href": "/itim/rest/people/ZXJnbG9iYWxpZD0zNzY0OTc5NjgzODMzODA1NTEsb3U9MCxvdT1wZW9wbGUsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t",
                                                    "title": "Chuck Riegle"
                                                }
                                            }
                                        }],
                                        "statuses": [{
                                            "text": "Pending",
                                            "value": "PENDING",
                                            "key": "RequestAuditData.Status.PENDING"
                                        }],
                                        "accesses": [{
                                            "_links": {
                                                "self": {
                                                    "href": "/itim/rest/access/376511317273827596",
                                                    "title": "Business Partner Connect"
                                                }
                                            }
                                        }, {
                                            "_links": {
                                                "self": {
                                                    "href": "/itim/rest/access/376511866909527916",
                                                    "title": "North Region File Share"
                                                }
                                            }
                                        }],
                                        "actions": [{
                                            "text": "Manage Access",
                                            "value": "ACCESS_BATCH_REQUEST",
                                            "key": "RequestAuditData.Action.ACCESS_BATCH_REQUEST"
                                        }]
                                    }
                                }]
                            }
                        }
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/v2.0/Me": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "servers": [{
                "url": "/itim/rest"
            }, {
                "url": "/itim/rest/v1.2"
            }]
        },
        "/itim/arc/v2.0/activities": {
            "post": {
                "tags": ["Business Activity APIs"],
                "summary": "Creates Activity or Bulk Delete Activities",
                "parameters": [{
                    "name": "X-HTTP-Method-Override",
                    "in": "header",
                    "description": "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity11"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/activityfolders/{id}": {
            "get": {
                "tags": ["Activity Folder APIs"],
                "summary": "Get the details of Activity Folder",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Activity Folder APIs"],
                "summary": "Deletes the Activity Folder",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "removeChildren",
                    "in": "query",
                    "schema": {
                        "default": "false",
                        "type": "boolean"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "204": {
                        "description": "Deleted",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Activity Folder APIs"],
                "summary": "Updates the Activity Folder details",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity8"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/permissiongroup/bulk/upload": {
            "post": {
                "tags": ["Permission Group Bulk APIs"],
                "summary": "Creates Permission Groups using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerPermissionGroup"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerPermissionGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Permission Group Bulk APIs"],
                "summary": "Deletes the Permission Groups using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/activitygroup/risk/bulk/upload": {
            "post": {
                "tags": ["Business Activity Group Bulk APIs"],
                "summary": "Association of Activity Groups with Risk using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivityGroupToEntity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivityGroupToEntity"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/users/{userId}/risks/{riskId}/mitigations": {
            "post": {
                "tags": ["ARC User APIs"],
                "summary": "Apply mitigation to the risk of a user",
                "parameters": [{
                    "name": "riskId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Mitigation2"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Multi-Status",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/activitygroup/search": {
            "post": {
                "tags": ["Business Activity Group Bulk APIs"],
                "parameters": [{
                    "name": "condition",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "parent",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "type",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Activity Group Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/users/{id}/risks": {
            "get": {
                "tags": ["ARC User APIs"],
                "summary": "Fetches Risk associated to the User",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/users": {
            "get": {
                "tags": ["ARC User APIs"],
                "summary": "Get users for a provided entity",
                "parameters": [{
                    "name": "entityId",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "entityType",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sortDesc",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/risk/search": {
            "post": {
                "tags": ["Risk Bulk APIs"],
                "summary": "Search for Risks based on the provided filters",
                "parameters": [{
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "level",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sortDesc",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "name": "status",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "type",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Risk Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/mitigation/bulk/upload": {
            "post": {
                "tags": ["Mitigation Bulk APIs"],
                "summary": "Creates Mitigations using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerMitigation"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerMitigation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Mitigation Bulk APIs"],
                "summary": "Deletes the Mitigations using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/activitygroup/bulk/upload": {
            "post": {
                "tags": ["Business Activity Group Bulk APIs"],
                "summary": "Create new activity groups using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivityGroup"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivityGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Business Activity Group Bulk APIs"],
                "summary": "Deletes the Activity Groups using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/activities/{id}/permissions": {
            "get": {
                "tags": ["Business Activity APIs"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sortDesc",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": ["Business Activity APIs"],
                "summary": "Activity and Permission relation v2",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity10"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/entity/search": {
            "post": {
                "summary": "Search for Entities based on the provided filters",
                "parameters": [{
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "folderId",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sortDesc",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "name": "type",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/risks": {
            "post": {
                "tags": ["Risk APIs"],
                "summary": "Creates Risk or Bulk Delete Risks",
                "parameters": [{
                    "name": "X-HTTP-Method-Override",
                    "in": "header",
                    "description": "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Risk4"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/activity/permission/bulk/upload": {
            "post": {
                "tags": ["Business Activity Bulk APIs"],
                "summary": "Association of Activities with Permissions using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivityToPermission"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivityToPermission"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/activity/permissiongroup/bulk/upload": {
            "post": {
                "tags": ["Business Activity Bulk APIs"],
                "summary": "Association of Activities with Permission Groups using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivityToPermissionGroup"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivityToPermissionGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Activity Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/users/{id}/risks/analysis": {
            "post": {
                "tags": ["ARC User APIs"],
                "summary": "Check impact of adding permissions to the User",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/V1SwaggerUserRiskAnalysis"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/users/risks/preview/bulk": {
            "post": {
                "tags": ["ARC User APIs"],
                "summary": "Return the Analysis of User and added Access",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/risks/search": {
            "post": {
                "tags": ["Risk APIs"],
                "summary": "Search for Risks based on the provided filters",
                "parameters": [{
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "level",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sortDesc",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "name": "status",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "type",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/mitigations": {
            "post": {
                "tags": ["Mitigation APIs"],
                "summary": "Creates Mitigation or Bulk Delete Mitigations",
                "parameters": [{
                    "name": "X-HTTP-Method-Override",
                    "in": "header",
                    "description": "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Mitigation3"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/activity/search": {
            "post": {
                "tags": ["Business Activity Bulk APIs"],
                "summary": "Search for Business Activities based on the provided filters",
                "parameters": [{
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "parentId",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sortDesc",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "name": "type",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Activity Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/risks/{id}": {
            "get": {
                "tags": ["Risk APIs"],
                "summary": "Get the Risk details",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Risk APIs"],
                "summary": "Deletes the Risk",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Risk APIs"],
                "summary": "Updates the Risk details",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Risk3"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/activitygroup/activity/bulk": {
            "post": {
                "tags": ["Business Activity Group Bulk APIs"],
                "summary": "Map/unmap activity groups with activities",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivityGroupToEntity"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/activityfolders/search": {
            "post": {
                "tags": ["Activity Folder APIs"],
                "summary": "Search for Activity Folders based on the provided filters",
                "parameters": [{
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sortDesc",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/mitigation/bulk": {
            "patch": {
                "tags": ["Mitigation Bulk APIs"],
                "summary": "Update the Mitigation details",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerMitigationUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/risk/activitygroup/bulk": {
            "post": {
                "tags": ["Risk Bulk APIs"],
                "summary": "Association of Activity Group with Risk",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerRiskToMitigation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/activities/{id}/risks": {
            "get": {
                "tags": ["Business Activity APIs"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sortDesc",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/risks/{id}/activities": {
            "get": {
                "tags": ["Risk APIs"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sortDesc",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": ["Risk APIs"],
                "summary": "Risk and Activity relation v2",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Risk1"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/activity/bulk/upload": {
            "post": {
                "tags": ["Business Activity Bulk APIs"],
                "summary": "Create new activities using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivity"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Business Activity Bulk APIs"],
                "summary": "Delete the activities using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivityDelete"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivityDelete"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/activity/risk/bulk/upload": {
            "post": {
                "tags": ["Business Activity Bulk APIs"],
                "summary": "Association of Activities with Risks using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivityToRisk"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivityToRisk"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/mitigation/search": {
            "post": {
                "tags": ["Mitigation Bulk APIs"],
                "summary": "Search for Mitigations based on the provided filters",
                "parameters": [{
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sortDesc",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Mitigation Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/stats": {
            "get": {
                "tags": ["ARC Statistics APIs"],
                "summary": "Get the statistics of an entity",
                "parameters": [{
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "resourceType",
                    "in": "query",
                    "description": "Define the resource type to apply",
                    "required": true,
                    "schema": {
                        "enum": ["Business Activity", "Mitigation", "Risk", "All"],
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/risk/mitigation/bulk/upload": {
            "post": {
                "tags": ["Risk Bulk APIs"],
                "summary": "Association of Risks with Mitigations using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerRiskToMitigation"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerRiskToMitigation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/risks/{id}/mitigations": {
            "get": {
                "tags": ["Risk APIs"],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sortDesc",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": ["Risk APIs"],
                "summary": "Risk and Mitigation relation",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Risk2"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/permissiongroup/permission/bulk/upload": {
            "post": {
                "tags": ["Permission Group Bulk APIs"],
                "summary": "Map/Unmap Permission Groups with Permissions using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerPermissionToPermissionGroup"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerPermissionToPermissionGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/activities/{id}": {
            "get": {
                "tags": ["Business Activity APIs"],
                "summary": "Get the details of activity v2",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Business Activity APIs"],
                "summary": "Deletes the Activity v2",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Business Activity APIs"],
                "summary": "Updates the Activities details v2",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity12"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/mitigations/{id}": {
            "get": {
                "tags": ["Mitigation APIs"],
                "summary": "Get the Mitigation details",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Mitigation APIs"],
                "summary": "Deletes the Mitigation",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "204": {
                        "description": "Deleted",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Mitigation APIs"],
                "summary": "Update the Mitigation details",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Mitigation4"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/activity/bulk": {
            "patch": {
                "tags": ["Business Activity Bulk APIs"],
                "summary": "Updates the Activities details",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivityUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/risk/bulk": {
            "patch": {
                "tags": ["Risk Bulk APIs"],
                "summary": "Updates the Risk details",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerRiskUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/activitygroup/bulk": {
            "patch": {
                "tags": ["Business Activity Group Bulk APIs"],
                "summary": "Updates the Activity Group details",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerActivityGroupUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/activities/search": {
            "post": {
                "tags": ["Business Activity APIs"],
                "summary": "Search for Business Activities based on the provided filters",
                "parameters": [{
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "folderId",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sortDesc",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/users/{id}/risks/preview": {
            "post": {
                "tags": ["ARC User APIs"],
                "summary": "Check impact of adding permissions to the User",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "groupBy",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/V1SwaggerUserRiskPreview"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/permissiongroup/bulk": {
            "patch": {
                "tags": ["Permission Group Bulk APIs"],
                "summary": "Updates the Permission Groups details",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerPermissionGroupUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v1.0/risk/bulk/upload": {
            "post": {
                "tags": ["Risk Bulk APIs"],
                "summary": "Creates Risks using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerRisk"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwaggerRisk"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Risk Bulk APIs"],
                "summary": "Deletes the Risks using File Bulk Upload or by Json Request body",
                "parameters": [{
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Invalid Json",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "207": {
                        "description": "Partial Execution",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/activityfolders/{id}/children": {
            "get": {
                "tags": ["Activity Folder APIs"],
                "summary": "Get the Activities in Activity Folder",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sortDesc",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": ["Activity Folder APIs"],
                "summary": "Updates the relation between Activity Folder and other Activities or Folders",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity7"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/mitigations/{id}/risks": {
            "get": {
                "tags": ["Mitigation APIs"],
                "summary": "Show the details of Risks mapped to a Mitigation",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sortDesc",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/mitigations/search": {
            "post": {
                "tags": ["Mitigation APIs"],
                "summary": "Search for Mitigations based on the provided filters",
                "parameters": [{
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    }
                }, {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "sortDesc",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/itim/arc/v2.0/activityfolders": {
            "post": {
                "tags": ["Activity Folder APIs"],
                "summary": "Create new Activity Folder using Json Request body",
                "parameters": [{
                    "name": "X-HTTP-Method-Override",
                    "in": "header",
                    "description": "Override http method for Bulk Delete operation eg: X-HTTP-Method-Override=DELETE",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-admin-invocation",
                    "in": "header",
                    "description": "Is a admin call",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "name": "x-forwarded-host",
                    "in": "header",
                    "description": "Tenant",
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity6"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "DelegateRequestBean": {
                "type": "object",
                "properties": {
                    "delegate": {
                        "allOf": [{
                            "$ref": "#/components/schemas/EntityBean"
                        }, {
                            "example": {
                                "_links": {
                                    "self": {
                                        "href": "/itim/rest/systemusers/ZXJ1aWQ9YXNtaXRoLG91PXN5c3RlbVVzZXIsb3U9aXRpbSxvdT1vcmcsZGM9Y29t"
                                    }
                                }
                            }
                        }]
                    },
                    "endDate": {
                        "type": "string",
                        "example": "1432603800000"
                    },
                    "startDate": {
                        "type": "string",
                        "example": "1432603800000"
                    }
                }
            },
            "UserEntitlementGrant": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserToEntitlementGrant"
                        }
                    }
                }
            },
            "BulkGrantRevokeUserEntitlementGrantUserEntitlementRevoke": {
                "type": "object",
                "properties": {
                    "revoke": {
                        "$ref": "#/components/schemas/UserEntitlementRevoke"
                    },
                    "grant": {
                        "$ref": "#/components/schemas/UserEntitlementGrant"
                    }
                }
            },
            "ModifyServiceRequestBeanSwagger": {
                "type": "object",
                "properties": {
                    "profileName": {
                        "type": "string",
                        "example": "manualService"
                    },
                    "manualWorkOrderRequest": {
                        "allOf": [{
                            "$ref": "#/components/schemas/ManualWorkOrderRequestBean"
                        }, {
                            "example": {
                                "participant": {
                                    "type": "ADMINISTRATOR"
                                }
                            }
                        }]
                    },
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "erservicename": "ManualService",
                            "erconnectionmode": "MANUAL"
                        }
                    },
                    "orgID": {
                        "type": "string",
                        "example": "ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t"
                    }
                }
            },
            "Form": {
                "type": "object",
                "properties": {
                    "_inputs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormInput"
                        }
                    }
                }
            },
            "PersonModifyBeanSwagger": {
                "type": "object",
                "properties": {
                    "justification": {
                        "type": "string",
                        "example": "Department Change"
                    },
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "manager": ["erglobalid=328765385581670887,ou=0,ou=people,erglobalid=00000000000000000000,ou=org,dc=com"],
                            "title": "Marketing Manager"
                        }
                    }
                }
            },
            "AccountUpdateBeanSwagger": {
                "type": "object",
                "properties": {
                    "requestee": {
                        "allOf": [{
                            "$ref": "#/components/schemas/HALLink"
                        }, {
                            "example": {
                                "href": "/itim/rest/people/ZXJnbG9iYWxpZD03MjQyNDYxMTI1MTM0MTE0ODM5LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ"
                            }
                        }]
                    },
                    "_forms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Form"
                        },
                        "example": [{
                            "_inputs": [{
                                "attribute": "erPassword",
                                "value": "secret"
                            }, {
                                "property": "itimPassword",
                                "value": "secret"
                            }]
                        }]
                    }
                }
            },
            "ChallengeRequestUserBean": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    }
                }
            },
            "CreateAccessBean": {
                "type": "object",
                "properties": {
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "badges": [{
                                "style": "blue",
                                "designation": "approle"
                            }],
                            "additionalInformation": "Access created for the ApplicationRole",
                            "accessName": "ApplicationRole",
                            "entityType": 3,
                            "accessCategory": "Application",
                            "description": "ApplicationRole Access",
                            "isCommon": true,
                            "entityRef": "410a7b56-37c8-4b1d-9ca7-e96680d8a7eb",
                            "tags": ["tag1", "tag2"]
                        }
                    }
                }
            },
            "UserToEntitlementGrant": {
                "type": "object",
                "properties": {
                    "rights": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": []
                    },
                    "user": {
                        "type": "string",
                        "example": "ZXJnbG9iYWxpZD02NTU1NjcyMjcxMDI1NDM5MDMwLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbQ"
                    },
                    "group": {
                        "type": "string",
                        "example": ""
                    }
                }
            },
            "ManualWorkOrderRequestBean": {
                "type": "object",
                "properties": {
                    "defaultNotification": {
                        "type": "boolean"
                    },
                    "escalationPeriod": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "escalationParticipant": {
                        "$ref": "#/components/schemas/ParticipantBean"
                    },
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "sn": "Doe",
                            "cn": "john"
                        }
                    },
                    "participant": {
                        "$ref": "#/components/schemas/ParticipantBean"
                    }
                }
            },
            "ParticipantBean": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "sn": "Doe",
                            "cn": "john"
                        }
                    }
                }
            },
            "ServiceRequestBeanSwagger": {
                "type": "object",
                "properties": {
                    "profileName": {
                        "type": "string",
                        "example": "manualService"
                    },
                    "defaultProvisioningPolicyRequest": {
                        "allOf": [{
                            "$ref": "#/components/schemas/ProvisioningPolicyRequestBean"
                        }, {
                            "example": {
                                "enabled": "true",
                                "provisioningMode": "Manual"
                            }
                        }]
                    },
                    "manualWorkOrderRequest": {
                        "allOf": [{
                            "$ref": "#/components/schemas/ManualWorkOrderRequestBean"
                        }, {
                            "example": {
                                "profileName": "manualService",
                                "defaultProvisioningPolicyRequest": {
                                    "enabled": "true",
                                    "provisioningMode": "Manual"
                                },
                                "manualWorkOrderRequest": {
                                    "defaultNotification": "true",
                                    "escalationPeriod": "10",
                                    "escalationParticipant": {
                                        "id": "ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAzNSxvdT1zeXNSb2xlcyxlcmdsb2JhbGlkPTAwMDAwMDAwMDAwMDAwMDAwMDAwLG91PW9yZyxkYz1jb20",
                                        "type": "GROUP"
                                    },
                                    "participant": {
                                        "id": "ZXJnbG9iYWxpZD02MzkwMDg1MDQ2MjczNDI3MjQ1LG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ",
                                        "type": "USER"
                                    }
                                },
                                "_attributes": {
                                    "erservicename": "ManualService",
                                    "erconnectionmode": "MANUAL"
                                },
                                "orgID": "ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t"
                            }
                        }]
                    },
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "erservicename": "ManualService",
                            "erconnectionmode": "MANUAL"
                        }
                    },
                    "orgID": {
                        "type": "string",
                        "example": "ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t"
                    }
                }
            },
            "RecertifyWorkItemSwagger": {
                "type": "object",
                "properties": {
                    "userComment": {
                        "type": "string",
                        "example": ""
                    },
                    "userRecertificationData": {
                        "type": "object",
                        "example": {
                            "accountsToCertify": [{
                                "ownershipType": "Individual",
                                "decision": true,
                                "name": "vm on linux service",
                                "description": "",
                                "dependentRecertificationTodoTargets": [{
                                    "ownershipType": "",
                                    "decision": false,
                                    "name": "apache access",
                                    "description": "Apache access to xyz application",
                                    "dependentRecertificationTodoTargets": [],
                                    "dn": "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                                }],
                                "dn": "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                            }, {
                                "ownershipType": "Individual",
                                "decision": false,
                                "name": "vm on aix service",
                                "description": "",
                                "dependentRecertificationTodoTargets": [],
                                "dn": "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                            }],
                            "rolesToCertify": [{
                                "ownershipType": "",
                                "decision": false,
                                "name": "Developers",
                                "description": "Developers in Costa Mesa location",
                                "dependentRecertificationTodoTargets": [],
                                "dn": "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
                            }, {
                                "ownershipType": "",
                                "decision": true,
                                "name": "Managers",
                                "description": "Managers in Costa Mesa location",
                                "dependentRecertificationTodoTargets": [],
                                "dn": "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
                            }]
                        }
                    },
                    "justification": {
                        "type": "string",
                        "example": "The user requires the role and accesses to do the job"
                    }
                }
            },
            "WorkItemUpdateBeanSwagger": {
                "type": "object",
                "properties": {
                    "action": {
                        "allOf": [{
                            "$ref": "#/components/schemas/WorkItemActionBean"
                        }, {
                            "example": {
                                "code": "RS"
                            }
                        }]
                    },
                    "justification": {
                        "type": "string",
                        "example": "Provided requested information"
                    },
                    "label": {
                        "type": "string",
                        "example": "RFIAccountAdd"
                    },
                    "rfiAttributeValues": {
                        "type": "object",
                        "example": [{
                            "name": "cn",
                            "value": ["Marco Lounton"]
                        }, {
                            "name": "erntlocalgroups",
                            "value": ["Backup Operators", "ConfigMgr Remote Control Users"]
                        }]
                    }
                }
            },
            "CreatePersonRequestBean": {
                "type": "object",
                "properties": {
                    "profileName": {
                        "type": "string",
                        "example": "Person"
                    },
                    "scheduledTime": {
                        "type": "string",
                        "example": "01/01/2017 12:30"
                    },
                    "justification": {
                        "type": "string"
                    },
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "sn": "Doe",
                            "cn": "john"
                        }
                    },
                    "orgID": {
                        "type": "string",
                        "example": "ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t"
                    }
                }
            },
            "SelfRegisterPersonRequestBean": {
                "type": "object",
                "properties": {
                    "profileName": {
                        "type": "string",
                        "example": "Person"
                    },
                    "tenantID": {
                        "type": "string",
                        "example": "org"
                    },
                    "justification": {
                        "type": "string"
                    },
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "sn": "Doe",
                            "cn": "john"
                        }
                    }
                }
            },
            "WorkItemBatchUpdateBeanSwagger": {
                "type": "object",
                "properties": {
                    "_links": {
                        "type": "object",
                        "example": {
                            "self": {
                                "href": "/itim/rest/workitems/2461578322863485336"
                            }
                        }
                    },
                    "action": {
                        "allOf": [{
                            "$ref": "#/components/schemas/WorkItemActionBean"
                        }, {
                            "example": {
                                "code": "AR"
                            }
                        }]
                    },
                    "justification": {
                        "type": "string",
                        "example": "Rejecting request due to policy violations"
                    },
                    "label": {
                        "type": "string",
                        "example": "Manager Approval"
                    }
                }
            },
            "ChangePasswordSwaggerBean": {
                "type": "object",
                "properties": {
                    "_forms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Form"
                        },
                        "example": [{
                            "_inputs": [{
                                "property": "oldPassword",
                                "value": "myoldpassword"
                            }, {
                                "attribute": "erPassword",
                                "value": "mypassword"
                            }]
                        }]
                    }
                }
            },
            "FormInput": {
                "type": "object",
                "properties": {
                    "attribute": {
                        "type": "string",
                        "example": "sharedSecret"
                    },
                    "value": {
                        "type": "object",
                        "example": "sharedSecret"
                    }
                }
            },
            "PersonSuspendRestoreBeanSwagger": {
                "type": "object",
                "properties": {
                    "justification": {
                        "type": "string",
                        "example": "The person is on a long leave"
                    }
                }
            },
            "AccessAssignmentSingleRequestBean": {
                "type": "object",
                "properties": {
                    "justification": {
                        "type": "string",
                        "example": "Deleting the access assignment due to change of role"
                    }
                }
            },
            "LabelBean": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "inserts": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "key": {
                        "type": "string"
                    }
                }
            },
            "ModifyAccessBean": {
                "type": "object",
                "properties": {
                    "enableAccess": {
                        "type": "boolean",
                        "example": false
                    },
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "entityType": 3
                        }
                    }
                }
            },
            "RetrievePasswordSwagger": {
                "type": "object",
                "properties": {
                    "_forms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Form"
                        }
                    }
                }
            },
            "ValidatePasswordSwaggerBean": {
                "type": "object",
                "properties": {
                    "_forms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Form"
                        },
                        "example": [{
                            "_inputs": [{
                                "attribute": "erPassword",
                                "value": "mypassword"
                            }]
                        }]
                    }
                }
            },
            "SearchAssignmentRequestBeanSwagger": {
                "type": "object",
                "properties": {
                    "rightsFilter": {
                        "type": "string",
                        "example": "name eq \"Elite Plumbing\" AND city eq \"New York\""
                    },
                    "entitlement": {
                        "type": "string",
                        "example": "ZXJnbG9iYWxpZD0zMjkwMjU2ODQ3MDcwNzgyNzQ5LG91PXJvbGVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWNvbQ"
                    }
                }
            },
            "ModifyPasswordPolicyRequestBeanSwagger": {
                "type": "object",
                "properties": {
                    "policyTargets": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "example": [{
                            "constant": "SPECIFIC_SERVICE",
                            "service": "ZXJnbG9iYWxpZD05MzM3OTgyNzQyNzQxMDUwMzQsb3U9c2VydmljZXMsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t"
                        }]
                    },
                    "rules": {
                        "type": "object",
                        "example": {
                            "minLength": "1",
                            "maxLength": "10"
                        }
                    },
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "erenabled": "false",
                            "erscope": "2"
                        }
                    }
                }
            },
            "EnforcePolicyRequestBeanSwagger": {
                "type": "object",
                "properties": {
                    "scheduledTime": {
                        "type": "string",
                        "example": "01/01/2017 12:30"
                    }
                }
            },
            "ModifyIdentityPolicyBeanSwagger": {
                "type": "object",
                "properties": {
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "erenabled": "true"
                        }
                    }
                }
            },
            "ProvisioningPolicyRequestBean": {
                "type": "object",
                "properties": {
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "sn": "Doe",
                            "cn": "john"
                        }
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "provisioningMode": {
                        "type": "string"
                    }
                }
            },
            "UserRecertificationDetailsBean": {
                "type": "object",
                "properties": {
                    "accountsToCertify": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecertificationTodoTarget"
                        },
                        "example": [{
                            "ownershipType": "Individual",
                            "decision": true,
                            "name": "vm on linux service",
                            "description": "",
                            "dependentRecertificationTodoTargets": [{
                                "ownershipType": "",
                                "decision": false,
                                "name": "apache access",
                                "description": "Apache access to xyz application",
                                "dependentRecertificationTodoTargets": [],
                                "dn": "erposixgroupname=apache,erglobalid=942064772966405183,ou=services,erglobalid=00000000000000000000,ou=org,dc=com"
                            }],
                            "dn": "erglobalid=2400238261244324504,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                        }, {
                            "ownershipType": "Individual",
                            "decision": false,
                            "name": "vm on aix service",
                            "description": "",
                            "dependentRecertificationTodoTargets": [],
                            "dn": "erglobalid=5949047696333471469,ou=0,ou=accounts,erglobalid=00000000000000000000,ou=org,dc=com"
                        }]
                    },
                    "comment": {
                        "type": "string",
                        "example": "string"
                    },
                    "justification": {
                        "type": "string",
                        "example": "string"
                    },
                    "rolesToCertify": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecertificationTodoTarget"
                        },
                        "example": [{
                            "ownershipType": "",
                            "decision": false,
                            "name": "Developers",
                            "description": "Developers in Costa Mesa location",
                            "dependentRecertificationTodoTargets": [],
                            "dn": "erglobalid=2402438404547081094,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
                        }, {
                            "ownershipType": "",
                            "decision": true,
                            "name": "Managers",
                            "description": "Managers in Costa Mesa location",
                            "dependentRecertificationTodoTargets": [],
                            "dn": "erglobalid=2402438404547081111,ou=roles,erglobalid=00000000000000000000,ou=org,dc=com"
                        }]
                    }
                }
            },
            "CreateLifecycleRuleRequestBeanSwagger": {
                "type": "object",
                "properties": {
                    "typeInfo": {
                        "type": "string",
                        "example": "Account"
                    },
                    "ruleType": {
                        "type": "string",
                        "example": "CATEGORY_TYPE"
                    },
                    "schedules": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "example": [{
                            "dayOfWeek": 0,
                            "hour": 12,
                            "month": 0,
                            "dayOfMonth": -1,
                            "minute": 0
                        }]
                    },
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "OperationName": "suspend",
                            "Filter": "(cn=*)",
                            "name": "Suspend Dormant Account LCR",
                            "description": "LCR to suspend dormant accounts"
                        }
                    }
                }
            },
            "WorkItemActionBean": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "inProgressLabel": {
                        "$ref": "#/components/schemas/LabelBean"
                    },
                    "label": {
                        "$ref": "#/components/schemas/LabelBean"
                    }
                }
            },
            "CreateIdentityPolicyRequestBeanSwagger": {
                "type": "object",
                "properties": {
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "eruserclass": "Person",
                            "erenabled": "true",
                            "erscope": "2",
                            "erkeywords": "Person",
                            "description": "abc-desc",
                            "erjavascript": "<Javascript code here>",
                            "erpolicytarget": "1;erglobalid=6995527626792419564,ou=services,erglobalid=00000000000000000000,ou=org,dc=Kuldeep",
                            "erpolicyitemname": "Identity-Policy"
                        }
                    },
                    "orgID": {
                        "type": "string",
                        "example": "ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwghMDAwMCxvdT1vcmcsZGM9RGl2eWE"
                    }
                }
            },
            "ChallengeResponseBean": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string"
                    },
                    "challenge": {
                        "type": "string"
                    }
                }
            },
            "AccessAssignCheckComplianceRequestBeanSwagger": {
                "type": "object",
                "properties": {
                    "newAccount": {
                        "allOf": [{
                            "$ref": "#/components/schemas/ExtendedHALBean"
                        }, {
                            "example": {
                                "_links": {
                                    "requestee": {
                                        "href": "/itim/rest/people/ZXJnbG9iYWxpZD03NjQxMTgwNTA0MzA0Njg5MTAzLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ"
                                    },
                                    "service": {
                                        "href": "/itim/rest/services/ZXJnbG9iYWxpZD03NjQxMTc2MjkxOTU5MDI1OTU0LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ"
                                    }
                                },
                                "_forms": [{
                                    "_inputs": [{
                                        "attribute": "eruid",
                                        "value": "userid"
                                    }, {
                                        "attribute": "erposixgecos",
                                        "value": ["aValue"]
                                    }]
                                }]
                            }
                        }]
                    }
                }
            },
            "RecertificationTodoTarget": {
                "type": "object",
                "properties": {
                    "ownershipType": {
                        "type": "string"
                    },
                    "decision": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dependentRecertificationTodoTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecertificationTodoTarget"
                        }
                    },
                    "dN": {
                        "type": "string"
                    }
                }
            },
            "PasswordSubmitResponseBeanSwagger": {
                "type": "object",
                "properties": {
                    "challengeResponses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChallengeResponseBean"
                        },
                        "example": [{
                            "response": "IBM",
                            "challenge": "What is the name of your first company?"
                        }, {
                            "response": "Red",
                            "challenge": "What is your favorite color?"
                        }, {
                            "response": "4",
                            "challenge": "How many siblings does your father have?"
                        }]
                    }
                }
            },
            "CreatePasswordPolicyRequestBeanSwagger": {
                "type": "object",
                "properties": {
                    "policyTargets": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "example": [{
                            "constant": "SPECIFIC_SERVICE",
                            "service": "ZXJnbG9iYWxpZD02NTgxNDM4MDU4NjI3Njg3NjI1LG91PXNlcnZpY2VzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ"
                        }, {
                            "constant": "SERVICE_TYPE",
                            "service": "WinLocalProfile"
                        }]
                    },
                    "rules": {
                        "type": "object",
                        "example": {
                            "customRules": {
                                "examples.passwordrules.RegularExpressionRule": "true"
                            },
                            "minAlphabeticCharacters": "3",
                            "minLength": "5",
                            "maxLength": "13"
                        }
                    },
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "erenabled": "true",
                            "erscope": "1",
                            "erkeywords": "Policy new",
                            "description": "test new",
                            "erpolicyitemname": "REST password-Policy new"
                        }
                    },
                    "orgID": {
                        "type": "string",
                        "example": "ZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t"
                    }
                }
            },
            "HALLink": {
                "type": "object",
                "properties": {
                    "hreflang": {
                        "type": "string"
                    },
                    "templated": {
                        "type": "boolean"
                    },
                    "profile": {
                        "format": "uri",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "href": {
                        "format": "uri",
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "UserEntitlementRevoke": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserToEntitlementRevoke"
                        }
                    }
                }
            },
            "EntityBean": {
                "type": "object",
                "properties": {
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "sn": "Doe",
                            "cn": "john"
                        }
                    }
                }
            },
            "ExtendedHALBean": {
                "type": "object",
                "properties": {
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "sn": "Doe",
                            "cn": "john"
                        }
                    }
                }
            },
            "ForgotPasswordSubmitResponseBeanSwagger": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string",
                        "example": "itimPassword"
                    },
                    "challengeResponses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChallengeResponseBean"
                        },
                        "example": [{
                            "response": "IBM",
                            "challenge": "What is the name of your first company?"
                        }, {
                            "response": "Red",
                            "challenge": "What is your favorite color?"
                        }, {
                            "response": "4",
                            "challenge": "How many siblings does your father have?"
                        }]
                    }
                }
            },
            "ModifyLifecycleRuleRequestBeanSwagger": {
                "type": "object",
                "properties": {
                    "_attributes": {
                        "type": "object",
                        "example": {
                            "name": "Suspend Unused Account LCR"
                        }
                    }
                }
            },
            "UserToEntitlementRevoke": {
                "type": "object",
                "properties": {
                    "assignmentOrigin": {
                        "type": "string",
                        "example": ""
                    },
                    "user": {
                        "type": "string",
                        "example": "ZXJnbG9iYWxpZD02NTU1NjcyMjcxMDI1NDM5MDMwLG91PTAsb3U9cGVvcGxlLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9aXN2Z2ltLGRjPWlzdmdpbQ"
                    },
                    "group": {
                        "type": "string",
                        "example": ""
                    }
                }
            },
            "PersonDeleteResponseBean": {
                "type": "object",
                "properties": {
                    "requestId": {
                        "type": "string"
                    },
                    "status": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "SwaggerRiskToMitigation": {
                "type": "object",
                "properties": {
                    "risks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Risk5"
                        }
                    }
                }
            },
            "SwaggerActivityToPermission": {
                "type": "object",
                "properties": {
                    "activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Activity2"
                        }
                    }
                }
            },
            "Activity": {
                "type": "object",
                "properties": {
                    "owner": {
                        "$ref": "#/components/schemas/User"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Risk3": {
                "type": "object",
                "properties": {
                    "likelihood": {
                        "type": "string"
                    },
                    "level": {
                        "type": "string"
                    },
                    "trend": {
                        "type": "string"
                    },
                    "acceptRational": {
                        "type": "string"
                    },
                    "impact": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string"
                    },
                    "tolerance": {
                        "type": "string"
                    }
                }
            },
            "ActivityGroup1": {
                "type": "object",
                "properties": {
                    "owner": {
                        "type": "string"
                    },
                    "condition": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "parentId": {
                        "type": "string"
                    }
                }
            },
            "Risk4": {
                "type": "object",
                "properties": {
                    "likelihood": {
                        "type": "string"
                    },
                    "level": {
                        "type": "string"
                    },
                    "trend": {
                        "type": "string"
                    },
                    "acceptRational": {
                        "type": "string"
                    },
                    "impact": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string"
                    },
                    "tolerance": {
                        "type": "string"
                    }
                }
            },
            "Risk5": {
                "type": "object",
                "properties": {
                    "add": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "remove": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Risk6": {
                "type": "object",
                "properties": {
                    "owner": {
                        "$ref": "#/components/schemas/User2"
                    },
                    "likelihood": {
                        "type": "string"
                    },
                    "level": {
                        "type": "string"
                    },
                    "trend": {
                        "type": "string"
                    },
                    "acceptRational": {
                        "type": "string"
                    },
                    "impact": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "tolerance": {
                        "type": "string"
                    }
                }
            },
            "Risk1": {
                "type": "object",
                "properties": {
                    "add": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Activity9"
                        }
                    },
                    "remove": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Risk2": {
                "type": "object",
                "properties": {
                    "add": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "remove": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Permission": {
                "type": "object",
                "properties": {
                    "condition": {
                        "type": "string"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "ActivityGroup": {
                "type": "object",
                "properties": {
                    "condition": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Risk7": {
                "type": "object",
                "properties": {
                    "owner": {
                        "$ref": "#/components/schemas/User3"
                    },
                    "likelihood": {
                        "type": "string"
                    },
                    "level": {
                        "type": "string"
                    },
                    "trend": {
                        "type": "string"
                    },
                    "acceptRational": {
                        "type": "string"
                    },
                    "impact": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "tolerance": {
                        "type": "string"
                    }
                }
            },
            "SwaggerMitigation": {
                "type": "object",
                "properties": {
                    "mitigations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Mitigation1"
                        }
                    }
                }
            },
            "SwaggerActivityGroupUpdate": {
                "type": "object",
                "properties": {
                    "activityGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ActivityGroup"
                        }
                    }
                }
            },
            "SwaggerActivityDelete": {
                "type": "object",
                "properties": {
                    "activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Activity5"
                        }
                    }
                }
            },
            "Mitigation": {
                "type": "object",
                "properties": {
                    "extraDescription": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Mitigation1": {
                "type": "object",
                "properties": {
                    "extraDescription": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Mitigation2": {
                "type": "object",
                "properties": {
                    "add": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "processId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "remove": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Mitigation3": {
                "type": "object",
                "properties": {
                    "extraDescription": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string"
                    }
                }
            },
            "SwaggerActivityToRisk": {
                "type": "object",
                "properties": {
                    "activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Activity4"
                        }
                    }
                }
            },
            "Mitigation4": {
                "type": "object",
                "properties": {
                    "extraDescription": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string"
                    }
                }
            },
            "SwaggerActivityGroup": {
                "type": "object",
                "properties": {
                    "activityGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ActivityGroup1"
                        }
                    }
                }
            },
            "SwaggerPermissionGroup": {
                "type": "object",
                "properties": {
                    "permissionGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PermissionGroup1"
                        }
                    }
                }
            },
            "Activity3": {
                "type": "object",
                "properties": {
                    "add": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "remove": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Activity4": {
                "type": "object",
                "properties": {
                    "add": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "remove": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Activity5": {
                "type": "object",
                "properties": {
                    "removeChildren": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "V1SwaggerUserRiskAnalysis": {
                "type": "object",
                "properties": {
                    "risks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Risk"
                        }
                    },
                    "processId": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "Activity6": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "businessUnit": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "familyName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            },
            "SwaggerActivityToPermissionGroup": {
                "type": "object",
                "properties": {
                    "activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Activity3"
                        }
                    }
                }
            },
            "User2": {
                "type": "object",
                "properties": {
                    "businessUnit": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "familyName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            },
            "User1": {
                "type": "object",
                "properties": {
                    "businessUnit": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "familyName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            },
            "Activity1": {
                "type": "object",
                "properties": {
                    "owner": {
                        "$ref": "#/components/schemas/User1"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    }
                }
            },
            "SwaggerRiskUpdate": {
                "type": "object",
                "properties": {
                    "risks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Risk6"
                        }
                    }
                }
            },
            "Activity2": {
                "type": "object",
                "properties": {
                    "add": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "remove": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "PermissionGroup": {
                "type": "object",
                "properties": {
                    "condition": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "Risk": {
                "type": "object",
                "properties": {
                    "mitigationIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "riskId": {
                        "type": "string"
                    }
                }
            },
            "User3": {
                "type": "object",
                "properties": {
                    "businessUnit": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "familyName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            },
            "Activity7": {
                "type": "object",
                "properties": {
                    "add": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "remove": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Activity8": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Activity9": {
                "type": "object",
                "properties": {
                    "condition": {
                        "type": "string"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Activity9"
                        }
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "SwaggerPermissionGroupUpdate": {
                "type": "object",
                "properties": {
                    "permissionGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PermissionGroup"
                        }
                    }
                }
            },
            "SwaggerRisk": {
                "type": "object",
                "properties": {
                    "risks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Risk7"
                        }
                    }
                }
            },
            "SwaggerActivity": {
                "type": "object",
                "properties": {
                    "activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Activity1"
                        }
                    }
                }
            },
            "Activity11": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    }
                }
            },
            "SwaggerActivityUpdate": {
                "type": "object",
                "properties": {
                    "activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Activity"
                        }
                    }
                }
            },
            "Activity10": {
                "type": "object",
                "properties": {
                    "add": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    },
                    "remove": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SwaggerPermissionToPermissionGroup": {
                "type": "object",
                "properties": {
                    "permissionGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PermissionGroup2"
                        }
                    }
                }
            },
            "SwaggerMitigationUpdate": {
                "type": "object",
                "properties": {
                    "mitigations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Mitigation"
                        }
                    }
                }
            },
            "PermissionGroup2": {
                "type": "object",
                "properties": {
                    "add": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "remove": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SwaggerActivityGroupToEntity": {
                "type": "object"
            },
            "PermissionGroup1": {
                "type": "object",
                "properties": {
                    "condition": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "parentId": {
                        "type": "string"
                    }
                }
            },
            "V1SwaggerUserRiskPreview": {
                "type": "object",
                "properties": {
                    "add": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Activity12": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string"
                    }
                }
            }
        }
    }
}]]></parameter>
    </Script>
</MetamergeConfig>